# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
max_line_length = 180
insert_final_newline = true
indent_style = space
indent_size = 4
tab_width = 4
trim_trailing_whitespace = true

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion

# C# files
[*.cs]

# Line Wrapping
wrap_parameters_style = chop_if_long
wrap_before_declaration_lpar = false
wrap_after_declaration_lpar = true
wrap_arguments_style = chop_if_long
wrap_before_invocation_lpar = false
wrap_after_invocation_lpar = true
wrap_before_comma = false
wrap_before_arrow_with_expressions = false
wrap_after_dot_in_method_calls = false
wrap_chained_method_calls = chop_if_long
wrap_before_extends_colon = true
wrap_extends_list_style = wrap_if_long
wrap_for_stmt_header_style = chop_if_long
wrap_before_ternary_opsigns = true
wrap_ternary_expr_style = chop_if_long
wrap_linq_expressions = chop_if_long
wrap_before_binary_opsign = true
wrap_chained_binary_expressions = true
force_chop_compound_if_expression = false
force_chop_compound_while_expression = false
force_chop_compound_do_expression = false
wrap_multiple_type_parameer_constraints_style = chop_if_long
wrap_object_and_collection_initializer_style = chop_if_long #check
wrap_array_initializer_style = chop_if_long #check
wrap_before_first_type_parameter_constraint = true
wrap_before_type_parameter_langle = false

# Other
place_abstract_accessorholder_on_single_line = true
place_simple_accessorholder_on_single_line = false
place_accessor_with_attrs_holder_on_single_line = true #check
place_simple_accessor_on_single_line = true
place_simple_method_on_single_line = false
place_simple_anonymousmethod_on_single_line = true
place_simple_initializer_on_single_line = true
place_type_attribute_on_same_line = false
place_method_attribute_on_same_line = false
place_accessorholder_attribute_on_same_line = false
place_simple_accessor_attribute_on_same_line = false
place_complex_accessor_attribute_on_same_line = false
place_field_attribute_on_same_line = false
place_constructor_initializer_on_same_line = true
place_type_constraints_on_same_line = false
allow_comment_after_lbrace = false

# _Indentation_
indent_switch_labels = true
indent_nested_usings_stmt = false
indent_nested_fixed_stmt = false
indent_nested_lock_stmt = false
indent_nested_for_stmt = true
indent_nested_foreach_stmt = true
indent_nested_while_stmt = true
indent_type_constraints = true
stick_comment = true
indent_method_decl_pars = inside
indent_invocation_pars = inside
indent_statement_pars = outside
indent_pars = outside

# Alignments
align_multiline_parameter = true
align_first_arg_by_paren = false
align_multiline_argument = true #check
align_multiline_extends_list = true
align_multiline_expression = false
align_multiline_binary_expressions_chain = false #check
align_multiline_calls_chain = false
align_multiline_array_and_object_initializer = false
indent_anonymous_method_block = false
align_multiline_for_stmt = true
align_multiple_declaration = true
align_multline_type_parameter_list = true
align_multline_type_parameter_constrains = true
align_linq_query = true

int_align_fields = false
int_align_properties = false
int_align_methods = false
int_align_parameters = false
int_align_variables = false
int_align_assignments = false
int_align_nested_ternary = false
int_align_invocations = false
int_align_binary_expressions = false
int_align_comments = false

outdent_binary_ops = false
outdent_dots = false
special_else_if_treatment = true
insert_final_newline = false

# _Spaces_
space_before_method_call_parentheses = false
space_before_empty_method_call_parentheses = false
space_before_method_parentheses = false
space_before_empty_method_parentheses = false
space_before_array_access_brackets = false
space_before_if_parentheses = true
space_before_while_parentheses = true
space_before_catch_parentheses = true
space_before_switch_parentheses = true
space_before_for_parentheses = true
space_before_foreach_parentheses = true
space_before_using_parentheses = true
space_before_lock_parentheses = true
space_before_typeof_parentheses = false
space_before_default_parentheses = false
space_before_checked_parentheses = false
space_before_fixed_parentheses = true
space_before_sizeof_parentheses = false
space_before_nameof_parentheses = false
space_before_type_parameter_angle = false
space_before_type_argument_angle = false
space_around_binary_operator = true
space_around_member_access_operator = false
space_after_logical_not_op = false
space_after_unary_minus_op = false
space_after_unary_plus_op = false
space_after_ampersand_op = false
space_after_asterik_op = false
space_within_parentheses = false
space_between_method_declaration_parameter_list_parentheses = false
space_between_method_declaration_empty_parameter_list_parentheses = false
space_between_method_call_parameter_list_parentheses = false
space_between_method_call_empty_parameter_list_parentheses = false
space_within_array_access_brackets = false
space_between_typecast_parentheses = false
space_between_parentheses_of_control_flow_statements = false
space_within_typeof_parentheses = false
space_within_default_parentheses = false
space_within_checked_parentheses = false
space_within_sizeof_parentheses = false
space_within_nameof_parentheses = false
space_within_type_parameter_angles = false
space_within_type_argument_angles = false
space_before_ternary_quest = true
space_after_ternary_quest = true
space_before_ternary_colon = true
space_after_ternary_colon = true
space_after_cast = false
space_near_postfix_and_prefix_op = false
space_before_comma = false
space_after_comma = true
space_before_semicolon_in_for_statement = false
space_after_semicolon_in_for_statement = true
space_before_attribute_colon = false
space_after_attribute_colon = true
space_before_colon_in_inheritance_clause = true
space_after_colon_in_inheritance_clause = true
space_around_member_access_operator = false
space_around_lambda_arrow = true
space_before_singleline_accessorholder = true
space_in_singleline_accessorholder = true
space_between_accessors_in_singleline_property = true
space_between_attribute_sections = false #check
space_withing_empty_braces = true
space_in_singleline_method = true
space_in_singleline_anonymous_method = true
space_within_attribute_brackets = false
space_before_array_rank_brackets = false
space_within_array_rank_brackets = false
space_within_array_rank_empty_brackets = false
space_within_single_line_array_initializer_braces = false
space_before_pointer_asterik_declaration = false
space_before_semicolon = false
space_before_colon_in_case = false
space_before_nullable_mark = false
space_before_type_parameter_constraint_colon = true
space_after_type_parameter_constraint_colon = true
space_around_alias_eq = true
space_before_trailing_comment = true
space_after_operator_keyword = true

# New line preferences
csharp_new_line_before_open_brace = types,methods,properties,anonymous_methods,control_blocks,object_collection_array_initializers,accessors
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Types: use keywords instead of BCL types, and permit var only when the type is clear
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = false:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true
csharp_prefer_braces = true:warning
csharp_preserve_single_line_blocks = true:none
csharp_preserve_single_line_statements = false:none
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:suggestion
dotnet_style_readonly_field = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_namespace_match_folder = true:suggestion
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = false:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_constructors = true:silent
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:silent

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

# Null checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = false:none
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# License header
file_header_template = Licensed to the .NET Foundation under one or more agreements.\nThe .NET Foundation licenses this file to you under the MIT license.

# C++ Files
[*.{cpp,h,in}]
curly_bracket_next_line = true
indent_brace_style = Allman

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

[*.{csproj,vbproj,proj,nativeproj,locproj}]
charset = utf-8

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# YAML config files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd,bat}]
end_of_line = crlf
