trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
    - master
    - release/*
  paths:
    exclude:
    - doc/*
    - LICENSE

variables:
  - name: _TeamName
    value: DotNetCore
  - name: _SignType
    value: real
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    # DotNet-Blob-Feed provides: dotnetfeed-storage-access-key-1
    # DotNet-Symbol-Server-Pats provides: provides microsoft-symbol-server-pat and symweb-symbol-server-pat
    # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
    - group: DotNet-Blob-Feed
    - group: DotNet-Symbol-Server-Pats
    - group: Publish-Build-Assets
  
resources:
  containers:
  - container: LinuxContainer
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-09ca40b-20190520220842

stages:
  - stage: build
    displayName: Build and Test

    # Three jobs for each of the three OSes we want to run on
    jobs:
    - template: /eng/common/templates/jobs/jobs.yml
      parameters:
        enableMicrobuild: true
        enableTelemetry: true
        enablePublishBuildArtifacts: true
        enablePublishTestResults: true
        helixRepo: Microsoft/clrmd

        jobs:
        - job: Windows_NT
          pool:
            ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              name: NetCore1ESPool-Public
              demands: ImageOverride -equals Build.Windows.10.Amd64.VS2017.Open
            ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              name: NetCore1ESPool-Internal
              demands: ImageOverride -equals Build.Windows.10.Amd64.VS2017

          variables:
          - DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
          - _InternalBuildArgs: ''

          strategy:
            matrix:
              build_debug:
                _BuildConfig: Debug
                _InternalBuildArgs: ''
              build_release:
                _BuildConfig: Release
                ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                  _InternalBuildArgs: /p:DotNetSignType=$(_SignType) 
                                      /p:TeamName=$(_TeamName)
                                      /p:DotNetPublishUsingPipelines=true
                                      /p:OfficialBuildId=$(BUILD.BUILDNUMBER)

          steps:
          - script: eng\common\cibuild.cmd
              -configuration $(_BuildConfig)
              -prepareMachine
              -verbosity normal
              $(_InternalBuildArgs)
            name: Build
            displayName: Build
            condition: succeeded()

        - job: Linux
          container: LinuxContainer
          pool:
            vmImage: ubuntu-20.04

          strategy:
            matrix:
              debug:
                _BuildConfig: Debug
              release:
                _BuildConfig: Release

          steps:
          - script: eng/common/cibuild.sh
              --configuration $(_BuildConfig)
              --prepareMachine
            name: Build
            displayName: Build
            condition: succeeded()

        - job: MacOS
          pool:
            vmImage: macos-11

          strategy:
            matrix:
              debug:
                _BuildConfig: Debug
              release:
                _BuildConfig: Release

          steps:
          - script: eng/common/cibuild.sh
              --configuration $(_BuildConfig)
              --prepareMachine
            name: Build
            displayName: Build
            condition: succeeded()

    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - template: /eng/common/templates/job/publish-build-assets.yml
        parameters:
          configuration: Release
          dependsOn: Windows_NT
          publishUsingPipelines: true
          pool:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals Build.windows.10.amd64.vs2017

  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - template: /eng/common/templates/post-build/post-build.yml
      parameters:
        # This is to enable SDL runs part of Post-Build Validation Stage.
        # as well as NuGet, SourceLink, and signing validation.
        # The variables get imported from group dotnet-diagnostics-sdl-params
        publishingInfraVersion: 3
        enableSourceLinkValidation: false
        enableSigningValidation: true
        enableSymbolValidation: false
        enableNugetValidation: true
        publishInstallersAndChecksums: true
