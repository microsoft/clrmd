#nullable enable
Microsoft.Diagnostics.Runtime.ClrDelegate
Microsoft.Diagnostics.Runtime.ClrDelegate.ClrDelegate() -> void
Microsoft.Diagnostics.Runtime.ClrDelegate.ClrDelegate(Microsoft.Diagnostics.Runtime.ClrObject obj) -> void
Microsoft.Diagnostics.Runtime.ClrDelegate.EnumerateDelegateTargets() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrDelegateTarget!>!
Microsoft.Diagnostics.Runtime.ClrDelegate.GetDelegateTarget() -> Microsoft.Diagnostics.Runtime.ClrDelegateTarget?
Microsoft.Diagnostics.Runtime.ClrDelegate.HasMultipleTargets.get -> bool
Microsoft.Diagnostics.Runtime.ClrDelegate.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrDelegateTarget
Microsoft.Diagnostics.Runtime.ClrDelegateTarget.ClrDelegateTarget(Microsoft.Diagnostics.Runtime.ClrDelegate del, Microsoft.Diagnostics.Runtime.ClrObject target, Microsoft.Diagnostics.Runtime.ClrMethod! method) -> void
Microsoft.Diagnostics.Runtime.ClrDelegateTarget.Method.get -> Microsoft.Diagnostics.Runtime.ClrMethod!
Microsoft.Diagnostics.Runtime.ClrDelegateTarget.Parent.get -> Microsoft.Diagnostics.Runtime.ClrDelegate
Microsoft.Diagnostics.Runtime.ClrDelegateTarget.TargetObject.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrObject.AsDelegate() -> Microsoft.Diagnostics.Runtime.ClrDelegate
Microsoft.Diagnostics.Runtime.ClrObject.IsDelegate.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.TryReadField<T>(string! fieldName, out T result) -> bool
Microsoft.Diagnostics.Runtime.ClrObject.TryReadObjectField(string! fieldName, out Microsoft.Diagnostics.Runtime.ClrObject result) -> bool
Microsoft.Diagnostics.Runtime.ClrObject.TryReadValueTypeField(string! fieldName, out Microsoft.Diagnostics.Runtime.ClrValueType result) -> bool
Microsoft.Diagnostics.Runtime.AMD64Context
Microsoft.Diagnostics.Runtime.AMD64Context.AMD64Context() -> void
Microsoft.Diagnostics.Runtime.AMD64Context.ContextFlags -> uint
Microsoft.Diagnostics.Runtime.AMD64Context.Cs -> ushort
Microsoft.Diagnostics.Runtime.AMD64Context.DebugControl -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr0 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr1 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr2 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr3 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr6 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Dr7 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Ds -> ushort
Microsoft.Diagnostics.Runtime.AMD64Context.EFlags -> int
Microsoft.Diagnostics.Runtime.AMD64Context.Es -> ushort
Microsoft.Diagnostics.Runtime.AMD64Context.Fs -> ushort
Microsoft.Diagnostics.Runtime.AMD64Context.Gs -> ushort
Microsoft.Diagnostics.Runtime.AMD64Context.LastBranchFromRip -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.LastBranchToRip -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.LastExceptionFromRip -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.LastExceptionToRip -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.MxCsr -> uint
Microsoft.Diagnostics.Runtime.AMD64Context.P1Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.P2Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.P3Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.P4Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.P5Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.P6Home -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R10 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R11 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R12 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R13 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R14 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R15 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R8 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.R9 -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rax -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rbp -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rbx -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rcx -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rdi -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rdx -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rip -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rsi -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Rsp -> ulong
Microsoft.Diagnostics.Runtime.AMD64Context.Ss -> ushort
Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Architecture.Amd64 = 2 -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Architecture.Arm = 3 -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Architecture.Arm64 = 4 -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Architecture.Unknown = 0 -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Architecture.X86 = 1 -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.Arm64Context
Microsoft.Diagnostics.Runtime.Arm64Context.Arm64Context() -> void
Microsoft.Diagnostics.Runtime.Arm64Context.Bcr -> uint*
Microsoft.Diagnostics.Runtime.Arm64Context.Bvr -> ulong*
Microsoft.Diagnostics.Runtime.Arm64Context.ContextFlags -> uint
Microsoft.Diagnostics.Runtime.Arm64Context.Cpsr -> uint
Microsoft.Diagnostics.Runtime.Arm64Context.Fp -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.Fpcr -> uint
Microsoft.Diagnostics.Runtime.Arm64Context.Fpsr -> uint
Microsoft.Diagnostics.Runtime.Arm64Context.Lr -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.Pc -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.Sp -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.V -> ulong*
Microsoft.Diagnostics.Runtime.Arm64Context.Wcr -> uint*
Microsoft.Diagnostics.Runtime.Arm64Context.Wvr -> ulong*
Microsoft.Diagnostics.Runtime.Arm64Context.X0 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X1 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X10 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X11 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X12 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X13 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X14 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X15 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X16 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X17 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X18 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X19 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X2 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X20 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X21 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X22 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X23 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X24 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X25 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X26 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X27 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X28 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X3 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X4 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X5 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X6 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X7 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X8 -> ulong
Microsoft.Diagnostics.Runtime.Arm64Context.X9 -> ulong
Microsoft.Diagnostics.Runtime.ArmContext
Microsoft.Diagnostics.Runtime.ArmContext.ArmContext() -> void
Microsoft.Diagnostics.Runtime.ArmContext.Bcr -> uint*
Microsoft.Diagnostics.Runtime.ArmContext.Bvr -> uint*
Microsoft.Diagnostics.Runtime.ArmContext.ContextFlags -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Cpsr -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Fpscr -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Lr -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Padding -> ulong
Microsoft.Diagnostics.Runtime.ArmContext.Pc -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Q0 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q1 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q10 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q11 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q12 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q13 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q14 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q15 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q2 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q3 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q4 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q5 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q6 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q7 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q8 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.Q9 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.ArmContext.R0 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R1 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R10 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R11 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R12 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R2 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R3 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R4 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R5 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R6 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R7 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R8 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.R9 -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Sp -> uint
Microsoft.Diagnostics.Runtime.ArmContext.Wcr -> uint*
Microsoft.Diagnostics.Runtime.ArmContext.Wvr -> uint*
Microsoft.Diagnostics.Runtime.CacheOptions
Microsoft.Diagnostics.Runtime.CacheOptions.CacheFieldNames.get -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.CacheOptions.CacheFieldNames.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheFields.get -> bool
Microsoft.Diagnostics.Runtime.CacheOptions.CacheFields.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheMethodNames.get -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.CacheOptions.CacheMethodNames.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheMethods.get -> bool
Microsoft.Diagnostics.Runtime.CacheOptions.CacheMethods.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheOptions() -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheTypeNames.get -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.CacheOptions.CacheTypeNames.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.CacheTypes.get -> bool
Microsoft.Diagnostics.Runtime.CacheOptions.CacheTypes.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.MaxDumpCacheSize.get -> long
Microsoft.Diagnostics.Runtime.CacheOptions.MaxDumpCacheSize.set -> void
Microsoft.Diagnostics.Runtime.CacheOptions.UseOSMemoryFeatures.get -> bool
Microsoft.Diagnostics.Runtime.CacheOptions.UseOSMemoryFeatures.set -> void
Microsoft.Diagnostics.Runtime.ClrAppDomain
Microsoft.Diagnostics.Runtime.ClrAppDomain.ClrAppDomain() -> void
Microsoft.Diagnostics.Runtime.ClrArray
Microsoft.Diagnostics.Runtime.ClrArray.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrArray.ClrArray(ulong address, Microsoft.Diagnostics.Runtime.ClrType! type) -> void
Microsoft.Diagnostics.Runtime.ClrArray.Equals(Microsoft.Diagnostics.Runtime.ClrArray other) -> bool
Microsoft.Diagnostics.Runtime.ClrArray.Equals(Microsoft.Diagnostics.Runtime.ClrObject other) -> bool
Microsoft.Diagnostics.Runtime.ClrArray.GetLength(int dimension) -> int
Microsoft.Diagnostics.Runtime.ClrArray.GetLowerBound(int dimension) -> int
Microsoft.Diagnostics.Runtime.ClrArray.GetObjectValue(int index) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrArray.GetObjectValue(params int[]! indices) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrArray.GetStructValue(int index) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrArray.GetStructValue(int index, bool interior) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrArray.GetStructValue(params int[]! indices) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrArray.GetUpperBound(int dimension) -> int
Microsoft.Diagnostics.Runtime.ClrArray.GetValue<T>(int index) -> T
Microsoft.Diagnostics.Runtime.ClrArray.GetValue<T>(params int[]! indices) -> T
Microsoft.Diagnostics.Runtime.ClrArray.Length.get -> int
Microsoft.Diagnostics.Runtime.ClrArray.Rank.get -> int
Microsoft.Diagnostics.Runtime.ClrArray.ReadValues<T>(int start, int count) -> T[]?
Microsoft.Diagnostics.Runtime.ClrArray.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.ClrDiagnosticsException() -> void
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.ClrDiagnosticsException(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.ClrDiagnosticsException(string! message) -> void
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.ClrDiagnosticsException(string! message, System.Exception! innerException) -> void
Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.ClrDiagnosticsException(string! message, int hr) -> void
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.CorruptedFileOrUnknownFormat = 1 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.CrashDumpError = 4 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.DacError = 6 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.DataRequestError = 5 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.DebuggerError = 3 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.RevisionMismatch = 2 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.RuntimeUninitialized = 7 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind.Unknown = 0 -> Microsoft.Diagnostics.Runtime.ClrDiagnosticsExceptionKind
Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Array = 20 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Boolean = 2 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Char = 3 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Class = 18 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Double = 13 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Float = 12 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.FunctionPointer = 27 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.GenericInstantiation = 21 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Int16 = 6 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Int32 = 8 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Int64 = 10 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Int8 = 4 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.MVar = 30 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.NativeInt = 24 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.NativeUInt = 25 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Object = 28 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Pointer = 15 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.SZArray = 29 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.String = 14 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Struct = 17 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.UInt16 = 7 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.UInt32 = 9 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.UInt64 = 11 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.UInt8 = 5 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Unknown = 0 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Var = 19 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrElementType.Void = 1 -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrEnum
Microsoft.Diagnostics.Runtime.ClrEnum.ClrEnum(Microsoft.Diagnostics.Runtime.ClrType! type) -> void
Microsoft.Diagnostics.Runtime.ClrEnum.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.ClrEnum.EnumerateValues() -> System.Collections.Generic.IEnumerable<(string! Name, object? Value)>!
Microsoft.Diagnostics.Runtime.ClrEnum.GetEnumNames() -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.Diagnostics.Runtime.ClrEnum.GetEnumValue<T>(string! name) -> T
Microsoft.Diagnostics.Runtime.ClrEnum.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
Microsoft.Diagnostics.Runtime.ClrException
Microsoft.Diagnostics.Runtime.ClrException.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrException.AsObject() -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrException.ClrException(Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers! helpers, Microsoft.Diagnostics.Runtime.ClrThread? thread, Microsoft.Diagnostics.Runtime.ClrObject obj) -> void
Microsoft.Diagnostics.Runtime.ClrException.HResult.get -> int
Microsoft.Diagnostics.Runtime.ClrException.Inner.get -> Microsoft.Diagnostics.Runtime.ClrException?
Microsoft.Diagnostics.Runtime.ClrException.Message.get -> string?
Microsoft.Diagnostics.Runtime.ClrException.StackTrace.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStackFrame!>
Microsoft.Diagnostics.Runtime.ClrException.Thread.get -> Microsoft.Diagnostics.Runtime.ClrThread?
Microsoft.Diagnostics.Runtime.ClrException.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
Microsoft.Diagnostics.Runtime.ClrField
Microsoft.Diagnostics.Runtime.ClrField.ClrField() -> void
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.ClrFinalizerRoot(ulong address, Microsoft.Diagnostics.Runtime.ClrObject obj) -> void
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.IsInterior.get -> bool
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.IsPinned.get -> bool
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.RootKind.get -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrFlavor
Microsoft.Diagnostics.Runtime.ClrFlavor.Core = 3 -> Microsoft.Diagnostics.Runtime.ClrFlavor
Microsoft.Diagnostics.Runtime.ClrFlavor.Desktop = 0 -> Microsoft.Diagnostics.Runtime.ClrFlavor
Microsoft.Diagnostics.Runtime.ClrGenericParameter
Microsoft.Diagnostics.Runtime.ClrGenericParameter.Attributes.get -> System.Reflection.GenericParameterAttributes
Microsoft.Diagnostics.Runtime.ClrGenericParameter.ClrGenericParameter(int metadataToken, int index, System.Reflection.GenericParameterAttributes attributes, string! name) -> void
Microsoft.Diagnostics.Runtime.ClrGenericParameter.Index.get -> int
Microsoft.Diagnostics.Runtime.ClrGenericParameter.MetadataToken.get -> int
Microsoft.Diagnostics.Runtime.ClrGenericParameter.Name.get -> string!
Microsoft.Diagnostics.Runtime.ClrHandle
Microsoft.Diagnostics.Runtime.ClrHandle.ClrHandle() -> void
Microsoft.Diagnostics.Runtime.ClrHandle.IsInterior.get -> bool
Microsoft.Diagnostics.Runtime.ClrHandle.IsPinned.get -> bool
Microsoft.Diagnostics.Runtime.ClrHandle.IsStrong.get -> bool
Microsoft.Diagnostics.Runtime.ClrHandle.RootKind.get -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.AsyncPinned = 7 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.Dependent = 6 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.Pinned = 3 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.RefCounted = 5 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.SizedRef = 8 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.Strong = 2 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.WeakLong = 1 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.WeakShort = 0 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHandleKind.WeakWinRT = 9 -> Microsoft.Diagnostics.Runtime.ClrHandleKind
Microsoft.Diagnostics.Runtime.ClrHeap
Microsoft.Diagnostics.Runtime.ClrHeap.ClrHeap() -> void
Microsoft.Diagnostics.Runtime.ClrHeap.GetObject(ulong objRef) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrInfo
Microsoft.Diagnostics.Runtime.ClrInfo.CreateRuntime() -> Microsoft.Diagnostics.Runtime.ClrRuntime!
Microsoft.Diagnostics.Runtime.ClrInfo.CreateRuntime(string! dacPath, bool ignoreMismatch = false) -> Microsoft.Diagnostics.Runtime.ClrRuntime!
Microsoft.Diagnostics.Runtime.ClrInfo.DacInfo.get -> Microsoft.Diagnostics.Runtime.DacInfo!
Microsoft.Diagnostics.Runtime.ClrInfo.DataTarget.get -> Microsoft.Diagnostics.Runtime.DataTarget!
Microsoft.Diagnostics.Runtime.ClrInfo.Flavor.get -> Microsoft.Diagnostics.Runtime.ClrFlavor
Microsoft.Diagnostics.Runtime.ClrInfo.ModuleInfo.get -> Microsoft.Diagnostics.Runtime.ModuleInfo!
Microsoft.Diagnostics.Runtime.ClrInfo.SingleFileRuntimeInfo.get -> Microsoft.Diagnostics.Runtime.ClrRuntimeInfo?
Microsoft.Diagnostics.Runtime.ClrInfo.Version.get -> Microsoft.Diagnostics.Runtime.VersionInfo
Microsoft.Diagnostics.Runtime.ClrInfoProvider
Microsoft.Diagnostics.Runtime.ClrInstanceField
Microsoft.Diagnostics.Runtime.ClrInstanceField.ClrInstanceField() -> void
Microsoft.Diagnostics.Runtime.ClrInterface
Microsoft.Diagnostics.Runtime.ClrInterface.BaseInterface.get -> Microsoft.Diagnostics.Runtime.ClrInterface?
Microsoft.Diagnostics.Runtime.ClrInterface.ClrInterface(string! name, Microsoft.Diagnostics.Runtime.ClrInterface? baseInterface) -> void
Microsoft.Diagnostics.Runtime.ClrInterface.Equals(Microsoft.Diagnostics.Runtime.ClrInterface? other) -> bool
Microsoft.Diagnostics.Runtime.ClrInterface.Name.get -> string!
Microsoft.Diagnostics.Runtime.ClrMethod
Microsoft.Diagnostics.Runtime.ClrMethod.ClrMethod() -> void
Microsoft.Diagnostics.Runtime.ClrMethod.Equals(Microsoft.Diagnostics.Runtime.ClrMethod? other) -> bool
Microsoft.Diagnostics.Runtime.ClrModule
Microsoft.Diagnostics.Runtime.ClrModule.ClrModule() -> void
Microsoft.Diagnostics.Runtime.ClrModule.Equals(Microsoft.Diagnostics.Runtime.ClrModule? other) -> bool
Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrObject.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrObject.AsArray() -> Microsoft.Diagnostics.Runtime.ClrArray
Microsoft.Diagnostics.Runtime.ClrObject.AsException() -> Microsoft.Diagnostics.Runtime.ClrException?
Microsoft.Diagnostics.Runtime.ClrObject.AsRuntimeType() -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.ClrObject.AsString(int maxLength = 4096) -> string?
Microsoft.Diagnostics.Runtime.ClrObject.ClrObject(ulong address, Microsoft.Diagnostics.Runtime.ClrType? type) -> void
Microsoft.Diagnostics.Runtime.ClrObject.ContainsPointers.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.EnumerateReferences(bool carefully = false, bool considerDependantHandles = true) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
Microsoft.Diagnostics.Runtime.ClrObject.EnumerateReferencesWithFields(bool carefully = false, bool considerDependantHandles = true) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrReference>!
Microsoft.Diagnostics.Runtime.ClrObject.Equals(Microsoft.Diagnostics.Runtime.ClrObject other) -> bool
Microsoft.Diagnostics.Runtime.ClrObject.Equals(Microsoft.Diagnostics.Runtime.IAddressableTypedEntity? entity) -> bool
Microsoft.Diagnostics.Runtime.ClrObject.GetComCallableWrapper() -> Microsoft.Diagnostics.Runtime.ComCallableWrapper?
Microsoft.Diagnostics.Runtime.ClrObject.GetRuntimeCallableWrapper() -> Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper?
Microsoft.Diagnostics.Runtime.ClrObject.HasComCallableWrapper.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.HasRuntimeCallableWrapper.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsArray.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsBoxedValue.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsComClassFactory.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsException.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsFree.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsNull.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsRuntimeType.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.IsValid.get -> bool
Microsoft.Diagnostics.Runtime.ClrObject.ReadBoxedValue<T>() -> T
Microsoft.Diagnostics.Runtime.ClrObject.ReadField<T>(string! fieldName) -> T
Microsoft.Diagnostics.Runtime.ClrObject.ReadObjectField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrObject.ReadStringField(string! fieldName, int maxLength = 4096) -> string?
Microsoft.Diagnostics.Runtime.ClrObject.ReadValueTypeField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrObject.Size.get -> ulong
Microsoft.Diagnostics.Runtime.ClrObject.SyncBlock.get -> Microsoft.Diagnostics.Runtime.SyncBlock?
Microsoft.Diagnostics.Runtime.ClrObject.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.ClrReference
Microsoft.Diagnostics.Runtime.ClrReference.Field.get -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
Microsoft.Diagnostics.Runtime.ClrReference.InnerField.get -> Microsoft.Diagnostics.Runtime.ClrReference?
Microsoft.Diagnostics.Runtime.ClrReference.IsArrayElement.get -> bool
Microsoft.Diagnostics.Runtime.ClrReference.IsDependentHandle.get -> bool
Microsoft.Diagnostics.Runtime.ClrReference.IsField.get -> bool
Microsoft.Diagnostics.Runtime.ClrReference.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrReference.Offset.get -> int
Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.AsyncPinnedHandle = 7 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.FinalizerQueue = 1 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.None = 0 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.PinnedHandle = 3 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.RefCountedHandle = 5 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.SizedRefHandle = 8 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.Stack = 4 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRootKind.StrongHandle = 2 -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrRuntime
Microsoft.Diagnostics.Runtime.ClrRuntime.ClrRuntime() -> void
Microsoft.Diagnostics.Runtime.ClrRuntime.Dispose() -> void
Microsoft.Diagnostics.Runtime.ClrSegment
Microsoft.Diagnostics.Runtime.ClrSegment.ClrSegment() -> void
Microsoft.Diagnostics.Runtime.ClrStackFrame
Microsoft.Diagnostics.Runtime.ClrStackFrame.ClrStackFrame() -> void
Microsoft.Diagnostics.Runtime.ClrStackFrameKind
Microsoft.Diagnostics.Runtime.ClrStackFrameKind.ManagedMethod = 0 -> Microsoft.Diagnostics.Runtime.ClrStackFrameKind
Microsoft.Diagnostics.Runtime.ClrStackFrameKind.Runtime = 1 -> Microsoft.Diagnostics.Runtime.ClrStackFrameKind
Microsoft.Diagnostics.Runtime.ClrStackFrameKind.Unknown = -1 -> Microsoft.Diagnostics.Runtime.ClrStackFrameKind
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.AsObject() -> Microsoft.Diagnostics.Runtime.ClrObject?
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.ClrStackInteriorRoot(Microsoft.Diagnostics.Runtime.ClrSegment! seg, ulong address, ulong objAddr, Microsoft.Diagnostics.Runtime.ClrStackFrame! stackFrame, bool pinned) -> void
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.IsInterior.get -> bool
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.IsPinned.get -> bool
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.ObjectPointer.get -> ulong
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.RootKind.get -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.StackFrame.get -> Microsoft.Diagnostics.Runtime.ClrStackFrame!
Microsoft.Diagnostics.Runtime.ClrStackRoot
Microsoft.Diagnostics.Runtime.ClrStackRoot.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrStackRoot.ClrStackRoot(ulong address, Microsoft.Diagnostics.Runtime.ClrObject obj, Microsoft.Diagnostics.Runtime.ClrStackFrame! stackFrame, bool pinned) -> void
Microsoft.Diagnostics.Runtime.ClrStackRoot.IsInterior.get -> bool
Microsoft.Diagnostics.Runtime.ClrStackRoot.IsPinned.get -> bool
Microsoft.Diagnostics.Runtime.ClrStackRoot.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrStackRoot.RootKind.get -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.ClrStackRoot.StackFrame.get -> Microsoft.Diagnostics.Runtime.ClrStackFrame!
Microsoft.Diagnostics.Runtime.ClrStaticField
Microsoft.Diagnostics.Runtime.ClrStaticField.ClrStaticField() -> void
Microsoft.Diagnostics.Runtime.ClrThread
Microsoft.Diagnostics.Runtime.ClrThread.ClrThread() -> void
Microsoft.Diagnostics.Runtime.ClrType
Microsoft.Diagnostics.Runtime.ClrType.ClrType() -> void
Microsoft.Diagnostics.Runtime.ClrType.Equals(Microsoft.Diagnostics.Runtime.ClrType? other) -> bool
Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrValueType.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ClrValueType.Equals(Microsoft.Diagnostics.Runtime.IAddressableTypedEntity? other) -> bool
Microsoft.Diagnostics.Runtime.ClrValueType.IsValid.get -> bool
Microsoft.Diagnostics.Runtime.ClrValueType.ReadField<T>(string! fieldName) -> T
Microsoft.Diagnostics.Runtime.ClrValueType.ReadObjectField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.ClrValueType.ReadStringField(string! fieldName, int maxLength = 4096) -> string?
Microsoft.Diagnostics.Runtime.ClrValueType.ReadValueTypeField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.ClrValueType.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.ComCallableWrapper
Microsoft.Diagnostics.Runtime.ComCallableWrapper.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ComCallableWrapper.ComCallableWrapper(Microsoft.Diagnostics.Runtime.Implementation.ICcwData! data) -> void
Microsoft.Diagnostics.Runtime.ComCallableWrapper.Handle.get -> ulong
Microsoft.Diagnostics.Runtime.ComCallableWrapper.IUnknown.get -> ulong
Microsoft.Diagnostics.Runtime.ComCallableWrapper.Interfaces.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ComInterfaceData>
Microsoft.Diagnostics.Runtime.ComCallableWrapper.Object.get -> ulong
Microsoft.Diagnostics.Runtime.ComCallableWrapper.RefCount.get -> int
Microsoft.Diagnostics.Runtime.ComInterfaceData
Microsoft.Diagnostics.Runtime.ComInterfaceData.ComInterfaceData(Microsoft.Diagnostics.Runtime.ClrType? type, ulong pointer) -> void
Microsoft.Diagnostics.Runtime.ComInterfaceData.InterfacePointer.get -> ulong
Microsoft.Diagnostics.Runtime.ComInterfaceData.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.CustomDataTarget
Microsoft.Diagnostics.Runtime.CustomDataTarget.CacheOptions.get -> Microsoft.Diagnostics.Runtime.CacheOptions?
Microsoft.Diagnostics.Runtime.CustomDataTarget.CacheOptions.set -> void
Microsoft.Diagnostics.Runtime.CustomDataTarget.CustomDataTarget(Microsoft.Diagnostics.Runtime.IDataReader! reader) -> void
Microsoft.Diagnostics.Runtime.CustomDataTarget.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.CustomDataTarget.DataReader.set -> void
Microsoft.Diagnostics.Runtime.CustomDataTarget.DefaultSymbolPath.get -> string?
Microsoft.Diagnostics.Runtime.CustomDataTarget.DefaultSymbolPath.set -> void
Microsoft.Diagnostics.Runtime.CustomDataTarget.Dispose() -> void
Microsoft.Diagnostics.Runtime.CustomDataTarget.~CustomDataTarget() -> void
Microsoft.Diagnostics.Runtime.DacInfo
Microsoft.Diagnostics.Runtime.DacInfo.ClrBuildId.get -> System.Collections.Immutable.ImmutableArray<byte>
Microsoft.Diagnostics.Runtime.DacInfo.DacInfo(string? localPath, string! specificName, string! agnosticName, Microsoft.Diagnostics.Runtime.Architecture targetArch, int filesize, int timestamp, Microsoft.Diagnostics.Runtime.VersionInfo version, System.Collections.Immutable.ImmutableArray<byte> clrBuildId) -> void
Microsoft.Diagnostics.Runtime.DacInfo.IndexFileSize.get -> int
Microsoft.Diagnostics.Runtime.DacInfo.IndexTimeStamp.get -> int
Microsoft.Diagnostics.Runtime.DacInfo.LocalDacPath.get -> string?
Microsoft.Diagnostics.Runtime.DacInfo.PlatformAgnosticFileName.get -> string!
Microsoft.Diagnostics.Runtime.DacInfo.PlatformSpecificFileName.get -> string!
Microsoft.Diagnostics.Runtime.DacInfo.TargetArchitecture.get -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.DacInfo.Version.get -> Microsoft.Diagnostics.Runtime.VersionInfo
Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData
Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.AppDomainData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData
Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData.AppDomainStoreData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData
Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.AssemblyData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData
Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData.COMInterfacePointerData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.CcwData
Microsoft.Diagnostics.Runtime.DacInterface.CcwData.CcwData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress.ClrDataAddress(long value) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress.Value.get -> long
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataMethod
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataMethod.ClrDataMethod(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnk) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataMethod.GetILToNativeMap() -> Microsoft.Diagnostics.Runtime.ILToNativeMap[]?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule.ClrDataModule(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnknown) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule.GetFileName() -> string?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule.GetModuleData(out Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule.GetName() -> string?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.ClrDataProcess(Microsoft.Diagnostics.Runtime.DacLibrary! library, Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper! toClone) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.ClrDataProcess(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnknown) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.CreateStackWalk(uint id, uint flags) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.EnumerateMethodInstancesByAddress(Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress addr) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.DacInterface.ClrDataMethod!>!
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.Flush() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.GetSOSDacInterface() -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.GetSOSDacInterface6() -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.GetSOSDacInterface8() -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8?
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess.Request(uint reqCode, System.ReadOnlySpan<byte> input, System.Span<byte> output) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk
Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk.ClrStackWalk(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnk) -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk.GetContext(uint contextFlags, int contextBufSize, out int contextSize, byte[]! buffer) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk.GetFrameVtable() -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ClrStackWalk.Next() -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.CodeHeaderData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType.Host = 1 -> Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType.Loader = 0 -> Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType.Unknown = 2 -> Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables
Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.CommonMethodTables() -> void
Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData
Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.DomainLocalModuleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.ExtendedModuleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.InMemoryPdbAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.InMemoryPdbSize -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.IsDynamic -> int
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.IsFlatLayout -> int
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.IsInMemory -> int
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.LoadedPEAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.LoadedPESize -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.ExtendedModuleData.PEFile -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.FieldData
Microsoft.Diagnostics.Runtime.DacInterface.FieldData.FieldData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo
Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.FieldInfo() -> void
Microsoft.Diagnostics.Runtime.DacInterface.GCInfo
Microsoft.Diagnostics.Runtime.DacInterface.GCInfo.GCInfo() -> void
Microsoft.Diagnostics.Runtime.DacInterface.GenerationData
Microsoft.Diagnostics.Runtime.DacInterface.GenerationData.GenerationData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.HandleData
Microsoft.Diagnostics.Runtime.DacInterface.HandleData.HandleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.EphemeralAllocContextLimit.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.EphemeralAllocContextPtr.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.FQAllObjectsStart.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.FQAllObjectsStop.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.FQRootsStart.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.FQRootsStop.get -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.HeapDetails() -> void
Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo
Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo.JitCodeHeapInfo() -> void
Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo
Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo.JitManagerInfo() -> void
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.EnumerateFields(int token) -> System.Collections.Generic.IEnumerable<int>!
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.EnumerateGenericParams(int token) -> System.Collections.Generic.IEnumerable<int>!
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.EnumerateInterfaceImpls(int token) -> System.Collections.Generic.IEnumerable<int>!
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetCustomAttributeByName(int token, string! name, out System.IntPtr data, out uint cbData) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetFieldProps(int token, out string? name, out System.Reflection.FieldAttributes attrs, out System.IntPtr ppvSigBlob, out int pcbSigBlob, out int pdwCPlusTypeFlag, out System.IntPtr ppValue) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetGenericParamProps(int token, out int index, out System.Reflection.GenericParameterAttributes attributes, out string? name) -> bool
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetInterfaceImplProps(int token, out int mdClass, out int mdInterface) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetMethodAttributes(int token) -> System.Reflection.MethodAttributes
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetNestedClassProperties(int token, out int enclosing) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetRva(int token) -> uint
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetSigFromToken(int token) -> Microsoft.Diagnostics.Runtime.Utilities.SigParser
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetTypeDefProperties(int token, out string? name, out System.Reflection.TypeAttributes attributes, out int mdParent) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.GetTypeRefName(int token) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.MetadataImport(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnknown) -> void
Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData
Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.MethodDescData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.MethodTableCollectibleData
Microsoft.Diagnostics.Runtime.DacInterface.MethodTableCollectibleData.MethodTableCollectibleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData
Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.MethodTableData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ModuleData
Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ModuleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ObjectData
Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ObjectData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.RcwData
Microsoft.Diagnostics.Runtime.DacInterface.RcwData.RcwData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.RejitData
Microsoft.Diagnostics.Runtime.DacInterface.RejitData.RejitData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.EnumerateHandles() -> Microsoft.Diagnostics.Runtime.DacInterface.SOSHandleEnum?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.EnumerateHandles(params Microsoft.Diagnostics.Runtime.ClrHandleKind[]! types) -> Microsoft.Diagnostics.Runtime.DacInterface.SOSHandleEnum?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.EnumerateStackRefs(uint osThreadId) -> Microsoft.Diagnostics.Runtime.DacInterface.SOSStackRefEnum?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAppBase(ulong domain) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAppDomainData(ulong addr, out Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAppDomainList(int count = 0) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAppDomainName(ulong appDomain) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAppDomainStoreData(out Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAssemblyData(ulong domain, ulong assembly, out Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAssemblyList(ulong appDomain) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAssemblyList(ulong appDomain, int count) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetAssemblyName(ulong assembly) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetCCWData(ulong ccw, out Microsoft.Diagnostics.Runtime.DacInterface.CcwData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetCCWInterfaces(ulong ccw, int count) -> Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetClrDataModule(ulong module) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataModule?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetCodeHeaderData(ulong ip, out Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData codeHeaderData) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetCodeHeapList(ulong jitManager) -> Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetCommonMethodTables(out Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables commonMTs) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetConfigFile(ulong domain) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetDomainLocalModuleDataFromAppDomain(ulong appDomain, int id, out Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetDomainLocalModuleDataFromModule(ulong module, out Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetFieldData(ulong fieldDesc, out Microsoft.Diagnostics.Runtime.DacInterface.FieldData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetFieldInfo(ulong mt, out Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetFrameName(ulong vtable) -> string!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetGCHeapData(out Microsoft.Diagnostics.Runtime.DacInterface.GCInfo data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetHeapList(int heapCount) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetILForModule(ulong moduleAddr, uint rva) -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetJitHelperFunctionName(ulong addr) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetJitManagers() -> Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMetadataImport(ulong module) -> Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodDescData(ulong md, ulong ip, out Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodDescFromToken(ulong module, int token) -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodDescName(ulong md) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodDescPtrFromFrame(ulong frame) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodDescPtrFromIP(ulong frame) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodTableByEEClass(ulong eeclass) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodTableData(ulong addr, out Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodTableName(ulong mt) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetMethodTableSlot(ulong mt, uint slot) -> ulong
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetModuleData(ulong module, out Microsoft.Diagnostics.Runtime.DacInterface.ModuleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetModuleList(ulong assembly) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetModuleList(ulong assembly, int count) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetObjectData(ulong obj, out Microsoft.Diagnostics.Runtime.DacInterface.ObjectData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetPEFileName(ulong pefile) -> string?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetRCWData(ulong rcw, out Microsoft.Diagnostics.Runtime.DacInterface.RcwData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetRCWInterfaces(ulong ccw, int count) -> Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetRejitData(ulong md, ulong ip = 0) -> Microsoft.Diagnostics.Runtime.DacInterface.RejitData[]!
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetSegmentData(ulong addr, out Microsoft.Diagnostics.Runtime.DacInterface.SegmentData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetServerHeapDetails(ulong addr, out Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetSyncBlockData(int index, out Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetThreadData(ulong address, out Microsoft.Diagnostics.Runtime.DacInterface.ThreadData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetThreadFromThinlockId(uint id) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetThreadLocalModuleData(ulong thread, uint index, out Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetThreadPoolData(out Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetThreadStoreData(out Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetTlsIndex() -> uint
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetWksHeapDetails(out Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.GetWorkRequestData(ulong request, out Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.LoaderHeapTraverse
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverse
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind.TypeDefToMethodTable = 0 -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind.TypeRefToMethodTable = 1 -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.SOSDac(Microsoft.Diagnostics.Runtime.DacLibrary! lib, Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper! toClone) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.SOSDac(Microsoft.Diagnostics.Runtime.DacLibrary? library, System.IntPtr ptr) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.TraverseLoaderHeap(ulong heap, Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.LoaderHeapTraverse! callback) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.TraverseModuleMap(Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverseKind mt, ulong module, Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.ModuleMapTraverse! traverse) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.TraverseStubHeap(ulong heap, int type, Microsoft.Diagnostics.Runtime.DacInterface.SOSDac.LoaderHeapTraverse! callback) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6.GetMethodTableCollectibleData(ulong mt, out Microsoft.Diagnostics.Runtime.DacInterface.MethodTableCollectibleData data) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6.SOSDac6(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr ptr) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6.SOSDac6(Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper! toClone) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GenerationCount.get -> int
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GetAssemblyLoadContext(Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress methodTable, out Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress assemblyLoadContext) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GetFinalizationFillPointers() -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GetFinalizationFillPointers(ulong heap) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GetGenerationTable() -> Microsoft.Diagnostics.Runtime.DacInterface.GenerationData[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.GetGenerationTable(ulong heap) -> Microsoft.Diagnostics.Runtime.DacInterface.GenerationData[]?
Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8.SOSDac8(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr ptr) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSHandleEnum
Microsoft.Diagnostics.Runtime.DacInterface.SOSHandleEnum.ReadHandles(System.Span<Microsoft.Diagnostics.Runtime.DacInterface.HandleData> handles) -> int
Microsoft.Diagnostics.Runtime.DacInterface.SOSHandleEnum.SOSHandleEnum(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnk) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SOSStackRefEnum
Microsoft.Diagnostics.Runtime.DacInterface.SOSStackRefEnum.ReadStackReferences(System.Span<Microsoft.Diagnostics.Runtime.DacInterface.StackRefData> stackRefs) -> int
Microsoft.Diagnostics.Runtime.DacInterface.SOSStackRefEnum.SOSStackRefEnum(Microsoft.Diagnostics.Runtime.DacLibrary! library, System.IntPtr pUnk) -> void
Microsoft.Diagnostics.Runtime.DacInterface.SegmentData
Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.SegmentData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.StackRefData
Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.StackRefData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData
Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.SyncBlockData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.AllocationContextLimit -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.AllocationContextPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.Context -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.Domain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.FiberData -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.FirstNestedException -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.Frame -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.LastThrownObjectHandle -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.NextThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.Teb -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.ThreadData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData
Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.ThreadLocalModuleData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData
Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.ThreadPoolData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData
Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.ThreadStoreData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData
Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData.WorkRequestData() -> void
Microsoft.Diagnostics.Runtime.DacLibrary
Microsoft.Diagnostics.Runtime.DacLibrary.DacLibrary(Microsoft.Diagnostics.Runtime.DataTarget! dataTarget, System.IntPtr pClrDataProcess) -> void
Microsoft.Diagnostics.Runtime.DacLibrary.DacLibrary(Microsoft.Diagnostics.Runtime.DataTarget! dataTarget, string! dacPath) -> void
Microsoft.Diagnostics.Runtime.DacLibrary.DacLibrary(Microsoft.Diagnostics.Runtime.DataTarget! dataTarget, string! dacPath, ulong runtimeBaseAddress) -> void
Microsoft.Diagnostics.Runtime.DacLibrary.DacPrivateInterface.get -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataProcess!
Microsoft.Diagnostics.Runtime.DacLibrary.Dispose() -> void
Microsoft.Diagnostics.Runtime.DacLibrary.GetInterface<T>(in System.Guid riid) -> T?
Microsoft.Diagnostics.Runtime.DacLibrary.OwningLibrary.get -> Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary?
Microsoft.Diagnostics.Runtime.DacLibrary.SOSDacInterface.get -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac!
Microsoft.Diagnostics.Runtime.DacLibrary.SOSDacInterface6.get -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac6?
Microsoft.Diagnostics.Runtime.DacLibrary.SOSDacInterface8.get -> Microsoft.Diagnostics.Runtime.DacInterface.SOSDac8?
Microsoft.Diagnostics.Runtime.DataReaders.Implementation.IThreadReader
Microsoft.Diagnostics.Runtime.DataReaders.Implementation.IThreadReader.EnumerateOSThreadIds() -> System.Collections.Generic.IEnumerable<uint>!
Microsoft.Diagnostics.Runtime.DataReaders.Implementation.IThreadReader.GetThreadTeb(uint osThreadId) -> ulong
Microsoft.Diagnostics.Runtime.DataTarget
Microsoft.Diagnostics.Runtime.DataTarget.CacheOptions.get -> Microsoft.Diagnostics.Runtime.CacheOptions!
Microsoft.Diagnostics.Runtime.DataTarget.ClrVersions.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInfo!>
Microsoft.Diagnostics.Runtime.DataTarget.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.DataTarget.DataTarget(Microsoft.Diagnostics.Runtime.CustomDataTarget! customTarget) -> void
Microsoft.Diagnostics.Runtime.DataTarget.Dispose() -> void
Microsoft.Diagnostics.Runtime.DataTarget.EnumerateModules() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ModuleInfo!>!
Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.Float80.Float80() -> void
Microsoft.Diagnostics.Runtime.GCDesc
Microsoft.Diagnostics.Runtime.GCDesc.GCDesc(byte[]! data) -> void
Microsoft.Diagnostics.Runtime.GCDesc.IsEmpty.get -> bool
Microsoft.Diagnostics.Runtime.GCDesc.WalkObject(byte[]! buffer, int size) -> System.Collections.Generic.IEnumerable<(ulong ReferencedObject, int Offset)>!
Microsoft.Diagnostics.Runtime.GCMode
Microsoft.Diagnostics.Runtime.GCMode.Cooperative = 0 -> Microsoft.Diagnostics.Runtime.GCMode
Microsoft.Diagnostics.Runtime.GCMode.Preemptive = 1 -> Microsoft.Diagnostics.Runtime.GCMode
Microsoft.Diagnostics.Runtime.GCRoot
Microsoft.Diagnostics.Runtime.GCRoot.EnumerateAllPaths(ulong source, ulong target, bool returnOnlyFullyUniquePaths, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<System.Collections.Generic.LinkedList<Microsoft.Diagnostics.Runtime.ClrObject>!>!
Microsoft.Diagnostics.Runtime.GCRoot.EnumerateGCRoots(ulong target, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.GCRootPath>!
Microsoft.Diagnostics.Runtime.GCRoot.EnumerateGCRoots(ulong target, bool returnOnlyFullyUniquePaths, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.GCRootPath>!
Microsoft.Diagnostics.Runtime.GCRoot.EnumerateGCRoots(ulong target, bool returnOnlyFullyUniquePaths, int maxDegreeOfParallelism, System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrRoot!>! roots, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.GCRootPath>!
Microsoft.Diagnostics.Runtime.GCRoot.EnumerateGCRoots(ulong target, bool returnOnlyFullyUniquePaths, int maxDegreeOfParallelism, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.GCRootPath>!
Microsoft.Diagnostics.Runtime.GCRoot.FindSinglePath(ulong source, ulong target, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.LinkedList<Microsoft.Diagnostics.Runtime.ClrObject>?
Microsoft.Diagnostics.Runtime.GCRoot.GCRoot(Microsoft.Diagnostics.Runtime.ClrHeap! heap) -> void
Microsoft.Diagnostics.Runtime.GCRoot.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
Microsoft.Diagnostics.Runtime.GCRoot.ProgressUpdated -> Microsoft.Diagnostics.Runtime.GCRootProgressUpdatedEventHandler?
Microsoft.Diagnostics.Runtime.GCRootPath
Microsoft.Diagnostics.Runtime.GCRootPath.GCRootPath(Microsoft.Diagnostics.Runtime.IClrRoot! root, System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrObject> path) -> void
Microsoft.Diagnostics.Runtime.GCRootPath.Path.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrObject>
Microsoft.Diagnostics.Runtime.GCRootPath.Root.get -> Microsoft.Diagnostics.Runtime.IClrRoot!
Microsoft.Diagnostics.Runtime.GCRootProgressUpdatedEventHandler
Microsoft.Diagnostics.Runtime.HotColdRegions
Microsoft.Diagnostics.Runtime.HotColdRegions.ColdSize.get -> uint
Microsoft.Diagnostics.Runtime.HotColdRegions.ColdStart.get -> ulong
Microsoft.Diagnostics.Runtime.HotColdRegions.HotColdRegions(ulong hotStart, uint hotSize, ulong coldStart, uint coldSize) -> void
Microsoft.Diagnostics.Runtime.HotColdRegions.HotSize.get -> uint
Microsoft.Diagnostics.Runtime.HotColdRegions.HotStart.get -> ulong
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.Address.get -> ulong
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.ReadField<T>(string! fieldName) -> T
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.ReadObjectField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.ReadStringField(string! fieldName, int maxLength = 4096) -> string?
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.ReadValueTypeField(string! fieldName) -> Microsoft.Diagnostics.Runtime.ClrValueType
Microsoft.Diagnostics.Runtime.IAddressableTypedEntity.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.IAddressableTypedEntityExtensions
Microsoft.Diagnostics.Runtime.IClrRoot
Microsoft.Diagnostics.Runtime.IClrRoot.Address.get -> ulong
Microsoft.Diagnostics.Runtime.IClrRoot.IsInterior.get -> bool
Microsoft.Diagnostics.Runtime.IClrRoot.IsPinned.get -> bool
Microsoft.Diagnostics.Runtime.IClrRoot.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
Microsoft.Diagnostics.Runtime.IClrRoot.RootKind.get -> Microsoft.Diagnostics.Runtime.ClrRootKind
Microsoft.Diagnostics.Runtime.IClrStackRoot
Microsoft.Diagnostics.Runtime.IClrStackRoot.StackFrame.get -> Microsoft.Diagnostics.Runtime.ClrStackFrame!
Microsoft.Diagnostics.Runtime.IDataReader
Microsoft.Diagnostics.Runtime.IDataReader.Architecture.get -> Microsoft.Diagnostics.Runtime.Architecture
Microsoft.Diagnostics.Runtime.IDataReader.DisplayName.get -> string!
Microsoft.Diagnostics.Runtime.IDataReader.EnumerateModules() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ModuleInfo!>!
Microsoft.Diagnostics.Runtime.IDataReader.FlushCachedData() -> void
Microsoft.Diagnostics.Runtime.IDataReader.GetBuildId(ulong baseAddress) -> System.Collections.Immutable.ImmutableArray<byte>
Microsoft.Diagnostics.Runtime.IDataReader.GetThreadContext(uint threadID, uint contextFlags, System.Span<byte> context) -> bool
Microsoft.Diagnostics.Runtime.IDataReader.GetVersionInfo(ulong baseAddress, out Microsoft.Diagnostics.Runtime.VersionInfo version) -> bool
Microsoft.Diagnostics.Runtime.IDataReader.IsThreadSafe.get -> bool
Microsoft.Diagnostics.Runtime.IDataReader.ProcessId.get -> int
Microsoft.Diagnostics.Runtime.IDataReader.TargetPlatform.get -> System.Runtime.InteropServices.OSPlatform
Microsoft.Diagnostics.Runtime.ILInfo
Microsoft.Diagnostics.Runtime.ILInfo.Address.get -> ulong
Microsoft.Diagnostics.Runtime.ILInfo.Flags.get -> uint
Microsoft.Diagnostics.Runtime.ILInfo.ILInfo(ulong address, int len, uint flags, uint localVarSignatureToken) -> void
Microsoft.Diagnostics.Runtime.ILInfo.Length.get -> int
Microsoft.Diagnostics.Runtime.ILInfo.LocalVarSignatureToken.get -> uint
Microsoft.Diagnostics.Runtime.ILToNativeMap
Microsoft.Diagnostics.Runtime.ILToNativeMap.EndAddress -> ulong
Microsoft.Diagnostics.Runtime.ILToNativeMap.ILOffset -> int
Microsoft.Diagnostics.Runtime.ILToNativeMap.ILToNativeMap() -> void
Microsoft.Diagnostics.Runtime.ILToNativeMap.StartAddress -> ulong
Microsoft.Diagnostics.Runtime.IExportReader
Microsoft.Diagnostics.Runtime.IExportReader.TryGetSymbolAddress(ulong baseAddress, string! name, out ulong address) -> bool
Microsoft.Diagnostics.Runtime.IMemoryReader
Microsoft.Diagnostics.Runtime.IMemoryReader.PointerSize.get -> int
Microsoft.Diagnostics.Runtime.IMemoryReader.Read(ulong address, System.Span<byte> buffer) -> int
Microsoft.Diagnostics.Runtime.IMemoryReader.Read<T>(ulong address) -> T
Microsoft.Diagnostics.Runtime.IMemoryReader.Read<T>(ulong address, out T value) -> bool
Microsoft.Diagnostics.Runtime.IMemoryReader.ReadPointer(ulong address) -> ulong
Microsoft.Diagnostics.Runtime.IMemoryReader.ReadPointer(ulong address, out ulong value) -> bool
Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain
Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.ClrmdAppDomain(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.ClrmdAppDomain(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers! helpers, ulong address) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType
Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.ClrmdArrayType(Microsoft.Diagnostics.Runtime.ClrHeap! heap, Microsoft.Diagnostics.Runtime.ClrType? baseType, Microsoft.Diagnostics.Runtime.ClrModule? module, Microsoft.Diagnostics.Runtime.Implementation.ITypeData! data, string? name = null) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.SetComponentType(Microsoft.Diagnostics.Runtime.ClrType? type) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType
Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ClrmdConstructedType(Microsoft.Diagnostics.Runtime.ClrType! componentType, int ranks, bool pointer) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle
Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.ClrmdDependentHandle(Microsoft.Diagnostics.Runtime.ClrAppDomain! parent, ulong address, Microsoft.Diagnostics.Runtime.ClrObject obj, Microsoft.Diagnostics.Runtime.ClrObject dependent) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdField
Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ClrmdField(Microsoft.Diagnostics.Runtime.ClrType! containingType, Microsoft.Diagnostics.Runtime.Implementation.IFieldData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType
Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ClrmdGenericType(Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers! helpers, Microsoft.Diagnostics.Runtime.ClrHeap! heap, Microsoft.Diagnostics.Runtime.ClrModule? module, Microsoft.Diagnostics.Runtime.ClrGenericParameter clrGenericParameter) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.GenericParameter.get -> Microsoft.Diagnostics.Runtime.ClrGenericParameter
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.ClrmdHandle(Microsoft.Diagnostics.Runtime.ClrAppDomain! parent, ulong address, Microsoft.Diagnostics.Runtime.ClrObject obj, Microsoft.Diagnostics.Runtime.ClrHandleKind kind) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.ClearCachedData() -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.ClrmdHeap(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, Microsoft.Diagnostics.Runtime.Implementation.IHeapData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.SkipAllocationContext(Microsoft.Diagnostics.Runtime.ClrSegment! seg, ulong address) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod
Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.ClrmdMethod(Microsoft.Diagnostics.Runtime.ClrType! type, Microsoft.Diagnostics.Runtime.Implementation.IMethodData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule
Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.ClrmdModule(Microsoft.Diagnostics.Runtime.ClrAppDomain! parent, Microsoft.Diagnostics.Runtime.Implementation.IModuleData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.ClrmdModule(Microsoft.Diagnostics.Runtime.ClrAppDomain! parent, Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers! helpers, ulong addr) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType
Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ClrmdPrimitiveType(Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers! helpers, Microsoft.Diagnostics.Runtime.ClrModule! module, Microsoft.Diagnostics.Runtime.ClrHeap! heap, Microsoft.Diagnostics.Runtime.ClrElementType type) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle
Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.ClrmdRefCountedHandle(Microsoft.Diagnostics.Runtime.ClrAppDomain! parent, ulong address, Microsoft.Diagnostics.Runtime.ClrObject obj, uint refCount) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime
Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.ClrmdRuntime(Microsoft.Diagnostics.Runtime.ClrInfo! info, Microsoft.Diagnostics.Runtime.DacLibrary! dac, Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers! helpers) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.Initialize() -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment
Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.ClrmdSegment(Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap! heap, Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers! helpers, Microsoft.Diagnostics.Runtime.Implementation.ISegmentData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField
Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ClrmdStaticField(Microsoft.Diagnostics.Runtime.ClrType! containingType, Microsoft.Diagnostics.Runtime.Implementation.IFieldData! data) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread
Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.ClrmdThread(Microsoft.Diagnostics.Runtime.Implementation.IThreadData! data, Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, Microsoft.Diagnostics.Runtime.ClrAppDomain! currentDomain) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdType
Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ClrmdType(Microsoft.Diagnostics.Runtime.ClrHeap! heap, Microsoft.Diagnostics.Runtime.ClrType? baseType, Microsoft.Diagnostics.Runtime.ClrModule? module, Microsoft.Diagnostics.Runtime.Implementation.ITypeData! data, string? name = null) -> void
Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers!
Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Shared.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock
Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock.ComFlags.get -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock.ComSyncBlock(ulong obj, uint comFlags) -> void
Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment
Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment.End.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment.FinalizerQueueSegment(ulong start, ulong end) -> void
Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment.Start.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock
Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.ComFlags.get -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.FullSyncBlock(in Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData syncBlk) -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.Address.set -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.BaseSize.get -> int
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.BaseSize.set -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.ComponentSize.get -> int
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.ComponentSize.set -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.Count.get -> uint
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.Count.set -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.HeapWalkStep() -> void
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.MethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.HeapWalkStep.MethodTable.set -> void
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData.Id.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainData.Name.get -> string?
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers.EnumerateModules(Microsoft.Diagnostics.Runtime.ClrAppDomain! domain) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrModule!>!
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers.GetApplicationBase(Microsoft.Diagnostics.Runtime.ClrAppDomain! domain) -> string?
Microsoft.Diagnostics.Runtime.Implementation.IAppDomainHelpers.GetConfigFile(Microsoft.Diagnostics.Runtime.ClrAppDomain! domain) -> string?
Microsoft.Diagnostics.Runtime.Implementation.ICcwData
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.GetInterfaces() -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ComInterfaceData>
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.Handle.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.IUnknown.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.JupiterRefCount.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.Object.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ICcwData.RefCount.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers
Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers.ExceptionHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers.ReadString(ulong addr, int maxLength) -> string?
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers.GetExceptionStackTrace(Microsoft.Diagnostics.Runtime.ClrThread? thread, Microsoft.Diagnostics.Runtime.ClrObject obj) -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStackFrame!>
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers.GetHResultOffset(Microsoft.Diagnostics.Runtime.ClrType! type) -> uint
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers.GetInnerExceptionOffset(Microsoft.Diagnostics.Runtime.ClrType! type) -> uint
Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers.GetMessageOffset(Microsoft.Diagnostics.Runtime.ClrType! type) -> uint
Microsoft.Diagnostics.Runtime.Implementation.IFieldData
Microsoft.Diagnostics.Runtime.Implementation.IFieldData.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.Implementation.IFieldData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IFieldData.Offset.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IFieldData.Token.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IFieldData.TypeMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers
Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers.GetStaticFieldAddress(Microsoft.Diagnostics.Runtime.ClrStaticField! field, Microsoft.Diagnostics.Runtime.ClrAppDomain? appDomain) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IFieldHelpers.ReadProperties(Microsoft.Diagnostics.Runtime.ClrType! parentType, int token, out string? name, out System.Reflection.FieldAttributes attributes, out Microsoft.Diagnostics.Runtime.Utilities.SigParser sigParser) -> bool
Microsoft.Diagnostics.Runtime.Implementation.IHeapData
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.ArrayMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.CanWalkHeap.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.ExceptionMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.FreeMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.HeapHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.IsServer.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.LogicalHeapCount.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.ObjectMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IHeapData.StringMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers.CreateSegments(Microsoft.Diagnostics.Runtime.ClrHeap! clrHeap, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrSegment!> segemnts, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.MemoryRange> allocationContexts, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment> fqRoots, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment> fqObjects) -> bool
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers.EnumerateDependentHandleLinks() -> System.Collections.Generic.IEnumerable<(ulong Source, ulong Target)>!
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.IHeapHelpers.GetSyncBlocks(out System.Collections.Generic.List<Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock!>! comSyncBlocks, out System.Collections.Generic.List<Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock!>! fullSyncBlocks, out System.Collections.Generic.List<ulong>! emptySyncBlocks) -> bool
Microsoft.Diagnostics.Runtime.Implementation.IMethodData
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.ColdSize.get -> uint
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.ColdStart.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.CompilationType.get -> Microsoft.Diagnostics.Runtime.MethodCompilationType
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.HotSize.get -> uint
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.HotStart.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.MethodDesc.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IMethodData.Token.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers
Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers.GetILForModule(ulong address, uint rva) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers.GetILMap(ulong nativeCode, in Microsoft.Diagnostics.Runtime.HotColdRegions hotColdInfo) -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ILToNativeMap>
Microsoft.Diagnostics.Runtime.Implementation.IMethodHelpers.GetSignature(ulong methodDesc, out string? signature) -> bool
Microsoft.Diagnostics.Runtime.Implementation.IModuleData
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.AssemblyAddress.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.AssemblyName.get -> string?
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.FileName.get -> string?
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.ILImageBase.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.IsDynamic.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.IsFlatLayout.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.IsPEFile.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.IsReflection.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.MetadataLength.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.MetadataStart.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.Name.get -> string?
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.PEImageBase.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.SimpleName.get -> string?
Microsoft.Diagnostics.Runtime.Implementation.IModuleData.Size.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.GetMetadataImport(Microsoft.Diagnostics.Runtime.ClrModule! module) -> Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport?
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.GetSortedTypeDefMap(Microsoft.Diagnostics.Runtime.ClrModule! module) -> (ulong MethodTable, int Token)[]!
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.GetSortedTypeRefMap(Microsoft.Diagnostics.Runtime.ClrModule! module) -> (ulong MethodTable, int Token)[]!
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.GetTypeName(ulong mt) -> string?
Microsoft.Diagnostics.Runtime.Implementation.IModuleHelpers.TryGetType(ulong mt) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.IObjectData
Microsoft.Diagnostics.Runtime.Implementation.IObjectData.CCW.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IObjectData.DataPointer.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IObjectData.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
Microsoft.Diagnostics.Runtime.Implementation.IObjectData.ElementTypeHandle.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IObjectData.RCW.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRcwData
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.CreatorThread.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.Disconnected.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.GetInterfaces() -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ComInterfaceData>
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.IUnknown.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.ManagedObject.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.RefCount.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IRcwData.VTablePointer.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.EnumerateHandleTable(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrHandle!>!
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.FlushCachedData() -> void
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.GetAppDomains(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, out Microsoft.Diagnostics.Runtime.ClrAppDomain? system, out Microsoft.Diagnostics.Runtime.ClrAppDomain? shared) -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrAppDomain!>
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.GetBaseClassLibrary(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime) -> Microsoft.Diagnostics.Runtime.ClrModule?
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.GetJitHelperFunctionName(ulong ip) -> string?
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.GetMethodDesc(ulong ip) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IRuntimeHelpers.GetThreads(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime) -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrThread!>
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.BaseAddress.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.CommittedEnd.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.End.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen0Length.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen0Start.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen1Length.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen1Start.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen2Length.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Gen2Start.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.IsEphemeralSegment.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.IsLargeObjectSegment.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.IsPinnedObjectSegment.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.LogicalHeap.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.ReservedEnd.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ISegmentData.Start.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IThreadData
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.Address.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.ExceptionHandle.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.IsFinalizer.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.LockCount.get -> uint
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.ManagedThreadID.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.OSThreadID.get -> uint
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.Preemptive.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.StackBase.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.StackLimit.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.IThreadData.State.get -> int
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers.EnumerateStackRoots(Microsoft.Diagnostics.Runtime.ClrThread! thread) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrStackRoot!>!
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers.EnumerateStackTrace(Microsoft.Diagnostics.Runtime.ClrThread! thread, bool includeContext) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrStackFrame!>!
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers.ExceptionHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IExceptionHelpers!
Microsoft.Diagnostics.Runtime.Implementation.IThreadHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.ITypeData
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.BaseSize.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.ComponentMethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.ComponentSize.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.ContainsPointers.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.Helpers.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers!
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.IsShared.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.MethodCount.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.MethodTable.get -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ITypeData.Token.get -> int
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateCCWForObject(ulong obj) -> Microsoft.Diagnostics.Runtime.ComCallableWrapper?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateFieldsForType(Microsoft.Diagnostics.Runtime.ClrType! type, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!> fields, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!> staticFields) -> bool
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateMethodFromHandle(ulong methodHandle) -> Microsoft.Diagnostics.Runtime.ClrMethod?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateMethodsForType(Microsoft.Diagnostics.Runtime.ClrType! type, out System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!> methods) -> bool
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateRCWForObject(ulong obj) -> Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.CreateSystemType(Microsoft.Diagnostics.Runtime.ClrHeap! heap, ulong mt, string! kind) -> Microsoft.Diagnostics.Runtime.ClrType!
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateArrayType(Microsoft.Diagnostics.Runtime.ClrType! inner, int ranks) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateBasicType(Microsoft.Diagnostics.Runtime.ClrElementType basicType) -> Microsoft.Diagnostics.Runtime.ClrType!
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateHeap() -> Microsoft.Diagnostics.Runtime.ClrHeap!
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateModule(Microsoft.Diagnostics.Runtime.ClrAppDomain! domain, ulong address) -> Microsoft.Diagnostics.Runtime.ClrModule!
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreatePointerType(Microsoft.Diagnostics.Runtime.ClrType! innerType, int depth) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateRuntime() -> Microsoft.Diagnostics.Runtime.ClrRuntime!
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateType(Microsoft.Diagnostics.Runtime.ClrHeap! heap, ulong mt, ulong obj) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateType(ulong mt, ulong obj) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateTypeFromSignature(Microsoft.Diagnostics.Runtime.ClrModule? module, Microsoft.Diagnostics.Runtime.Utilities.SigParser parser, System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrGenericParameter>! typeParameters, System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrGenericParameter>! methodParameters) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.GetOrCreateTypeFromToken(Microsoft.Diagnostics.Runtime.ClrModule! module, int token) -> Microsoft.Diagnostics.Runtime.ClrType?
Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory.IsThreadSafe.get -> bool
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.Factory.get -> Microsoft.Diagnostics.Runtime.Implementation.ITypeFactory!
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.GetAssemblyLoadContextAddress(ulong mt) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.GetLoaderAllocatorHandle(ulong mt) -> ulong
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.GetObjectData(ulong objRef) -> Microsoft.Diagnostics.Runtime.Implementation.IObjectData?
Microsoft.Diagnostics.Runtime.Implementation.ITypeHelpers.GetTypeName(ulong mt, out string? name) -> bool
Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType
Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType.Base = 7 -> Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType
Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType.Null = 0 -> Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.ElfFile.get -> Microsoft.Diagnostics.Runtime.Utilities.ElfFile!
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.EnumeratePRStatus() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.Utilities.IElfPRStatus!>!
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.GetAuxvValue(Microsoft.Diagnostics.Runtime.Utilities.ElfAuxvType type) -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.LoadedImages.get -> System.Collections.Immutable.ImmutableDictionary<ulong, Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage!>!
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.ReadMemory(ulong address, System.Span<byte> buffer) -> int
Microsoft.Diagnostics.Runtime.Utilities.ElfFile
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.Dispose() -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.ElfCoreFile(System.IO.Stream! stream, bool leaveOpen = false) -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfCoreFile.ElfCoreFile(string! coredump) -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.Dispose() -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.ElfFile(string! filename) -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.ElfFile(System.IO.Stream! stream, bool leaveOpen = false) -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.ElfFile(System.IO.Stream! stream, ulong position, bool leaveOpen, bool isVirtual) -> void
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.BuildId.get -> System.Collections.Immutable.ImmutableArray<byte>
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.Header.get -> Microsoft.Diagnostics.Runtime.Utilities.IElfHeader!
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.Notes.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.Utilities.ElfNote!>
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.ProgramHeaders.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader!>
Microsoft.Diagnostics.Runtime.Utilities.ElfFile.TryGetExportSymbol(string! symbolName, out ulong offset) -> bool
Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType.Core = 4 -> Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType.Executable = 2 -> Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType.Relocatable = 1 -> Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType.Shared = 3 -> Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.AsStream() -> System.IO.Stream!
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.BaseAddress.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.FileName.get -> string!
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.Open() -> Microsoft.Diagnostics.Runtime.Utilities.ElfFile?
Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.Size.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_386 = 3 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_AARCH64 = 183 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_ARM = 40 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_AVR32 = 6317 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_BLACKFIN = 106 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_CRIS = 76 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_FRV = 21569 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_H8_300 = 46 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_IA_64 = 50 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_M32R = 88 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_MN10300 = 89 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_NONE = 0 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_PARISC = 15 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_PPC = 20 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_PPC64 = 21 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_S390 = 22 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_SH = 42 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_SPARC32PLUS = 18 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_SPARCV9 = 43 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_SPU = 23 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_V850 = 87 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfMachine.EM_X86_64 = 62 -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.ElfNote
Microsoft.Diagnostics.Runtime.Utilities.ElfNote.ContentSize.get -> int
Microsoft.Diagnostics.Runtime.Utilities.ElfNote.Name.get -> string!
Microsoft.Diagnostics.Runtime.Utilities.ElfNote.ReadContents(ulong position, System.Span<byte> buffer) -> int
Microsoft.Diagnostics.Runtime.Utilities.ElfNote.ReadContents<T>(ulong position) -> T
Microsoft.Diagnostics.Runtime.Utilities.ElfNote.Type.get -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.Aux = 6 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.File = 1179208773 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.PrpsFpreg = 2 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.PrpsInfo = 3 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.PrpsStatus = 1 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType.TASKSTRUCT = 4 -> Microsoft.Diagnostics.Runtime.Utilities.ElfNoteType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.FileOffset.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.FileSize.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.IsExecutable.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.IsWritable.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.Type.get -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.VirtualAddress.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeader.VirtualSize.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Dynamic = 2 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Interp = 3 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Load = 1 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Note = 4 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Null = 0 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Phdr = 6 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType.Shlib = 5 -> Microsoft.Diagnostics.Runtime.Utilities.ElfProgramHeaderType
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.Architecture.get -> Microsoft.Diagnostics.Runtime.Utilities.ElfMachine
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.Is64Bit.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.IsValid.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.ProgramHeaderCount.get -> ushort
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.ProgramHeaderEntrySize.get -> ushort
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.ProgramHeaderOffset.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.SectionHeaderCount.get -> ushort
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.SectionHeaderEntrySize.get -> ushort
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.SectionHeaderOffset.get -> ulong
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.SectionHeaderStringIndex.get -> ushort
Microsoft.Diagnostics.Runtime.Utilities.IElfHeader.Type.get -> Microsoft.Diagnostics.Runtime.Utilities.ElfHeaderType
Microsoft.Diagnostics.Runtime.Utilities.IElfPRStatus
Microsoft.Diagnostics.Runtime.Utilities.IElfPRStatus.CopyRegistersAsContext(System.Span<byte> context) -> bool
Microsoft.Diagnostics.Runtime.Utilities.IElfPRStatus.ProcessId.get -> uint
Microsoft.Diagnostics.Runtime.Utilities.IElfPRStatus.ThreadId.get -> uint
Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.M128A.Clear() -> void
Microsoft.Diagnostics.Runtime.M128A.Equals(Microsoft.Diagnostics.Runtime.M128A other) -> bool
Microsoft.Diagnostics.Runtime.M128A.High -> ulong
Microsoft.Diagnostics.Runtime.M128A.Low -> ulong
Microsoft.Diagnostics.Runtime.M128A.M128A() -> void
Microsoft.Diagnostics.Runtime.MemoryRange
Microsoft.Diagnostics.Runtime.MemoryRange.CompareTo(ulong address) -> int
Microsoft.Diagnostics.Runtime.MemoryRange.Contains(Microsoft.Diagnostics.Runtime.MemoryRange other) -> bool
Microsoft.Diagnostics.Runtime.MemoryRange.Contains(ulong address) -> bool
Microsoft.Diagnostics.Runtime.MemoryRange.End.get -> ulong
Microsoft.Diagnostics.Runtime.MemoryRange.Length.get -> ulong
Microsoft.Diagnostics.Runtime.MemoryRange.MemoryRange(ulong start, ulong end) -> void
Microsoft.Diagnostics.Runtime.MemoryRange.Overlaps(Microsoft.Diagnostics.Runtime.MemoryRange other) -> bool
Microsoft.Diagnostics.Runtime.MemoryRange.Start.get -> ulong
Microsoft.Diagnostics.Runtime.MethodCompilationType
Microsoft.Diagnostics.Runtime.MethodCompilationType.Jit = 1 -> Microsoft.Diagnostics.Runtime.MethodCompilationType
Microsoft.Diagnostics.Runtime.MethodCompilationType.Ngen = 2 -> Microsoft.Diagnostics.Runtime.MethodCompilationType
Microsoft.Diagnostics.Runtime.MethodCompilationType.None = 0 -> Microsoft.Diagnostics.Runtime.MethodCompilationType
Microsoft.Diagnostics.Runtime.ModuleInfo
Microsoft.Diagnostics.Runtime.ModuleInfo.BuildId.get -> System.Collections.Immutable.ImmutableArray<byte>
Microsoft.Diagnostics.Runtime.ModuleInfo.DataReader.get -> Microsoft.Diagnostics.Runtime.IDataReader!
Microsoft.Diagnostics.Runtime.ModuleInfo.DataTarget.get -> Microsoft.Diagnostics.Runtime.DataTarget!
Microsoft.Diagnostics.Runtime.ModuleInfo.FileName.get -> string?
Microsoft.Diagnostics.Runtime.ModuleInfo.GetPEImage() -> Microsoft.Diagnostics.Runtime.Utilities.PEImage?
Microsoft.Diagnostics.Runtime.ModuleInfo.ImageBase.get -> ulong
Microsoft.Diagnostics.Runtime.ModuleInfo.IndexFileSize.get -> int
Microsoft.Diagnostics.Runtime.ModuleInfo.IndexTimeStamp.get -> int
Microsoft.Diagnostics.Runtime.ModuleInfo.IsManaged.get -> bool
Microsoft.Diagnostics.Runtime.ModuleInfo.ModuleInfo(Microsoft.Diagnostics.Runtime.IDataReader! reader, ulong imageBase, string? fileName, bool isVirtual, int indexFileSize, int indexTimeStamp, System.Collections.Immutable.ImmutableArray<byte> buildId) -> void
Microsoft.Diagnostics.Runtime.ModuleInfo.ModuleInfo(ulong imageBase, string? fileName, bool isVirtual, int indexFileSize, int indexTimeStamp, System.Collections.Immutable.ImmutableArray<byte> buildId) -> void
Microsoft.Diagnostics.Runtime.ModuleInfo.Pdb.get -> Microsoft.Diagnostics.Runtime.PdbInfo?
Microsoft.Diagnostics.Runtime.ModuleInfo.Version.get -> Microsoft.Diagnostics.Runtime.VersionInfo
Microsoft.Diagnostics.Runtime.ModuleLayout
Microsoft.Diagnostics.Runtime.ModuleLayout.Flat = 2 -> Microsoft.Diagnostics.Runtime.ModuleLayout
Microsoft.Diagnostics.Runtime.ModuleLayout.Loaded = 4 -> Microsoft.Diagnostics.Runtime.ModuleLayout
Microsoft.Diagnostics.Runtime.ModuleLayout.Mapped = 1 -> Microsoft.Diagnostics.Runtime.ModuleLayout
Microsoft.Diagnostics.Runtime.ModuleLayout.Unknown = 0 -> Microsoft.Diagnostics.Runtime.ModuleLayout
Microsoft.Diagnostics.Runtime.ObjectSet
Microsoft.Diagnostics.Runtime.ObjectSet.Count.get -> int
Microsoft.Diagnostics.Runtime.ObjectSet.Count.set -> void
Microsoft.Diagnostics.Runtime.ObjectSet.GetOffset(ulong obj, Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment seg) -> int
Microsoft.Diagnostics.Runtime.ObjectSet.GetSegment(ulong obj, out Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment seg) -> bool
Microsoft.Diagnostics.Runtime.ObjectSet.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment
Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment.EndAddress -> ulong
Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment.HeapHashSegment() -> void
Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment.Objects -> System.Collections.BitArray!
Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment.StartAddress -> ulong
Microsoft.Diagnostics.Runtime.ObjectSet.MinObjSize.get -> int
Microsoft.Diagnostics.Runtime.ObjectSet.ObjectSet(Microsoft.Diagnostics.Runtime.ClrHeap! heap) -> void
Microsoft.Diagnostics.Runtime.ObjectSet.Segments.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ObjectSet.HeapHashSegment>
Microsoft.Diagnostics.Runtime.PdbInfo
Microsoft.Diagnostics.Runtime.PdbInfo.Equals(Microsoft.Diagnostics.Runtime.PdbInfo? other) -> bool
Microsoft.Diagnostics.Runtime.PdbInfo.Guid.get -> System.Guid
Microsoft.Diagnostics.Runtime.PdbInfo.Path.get -> string!
Microsoft.Diagnostics.Runtime.PdbInfo.PdbInfo(string! path, System.Guid guid, int rev) -> void
Microsoft.Diagnostics.Runtime.PdbInfo.Revision.get -> int
Microsoft.Diagnostics.Runtime.PlatformFunctions
Microsoft.Diagnostics.Runtime.PlatformFunctions.PlatformFunctions() -> void
Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary
Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary.AddRef() -> int
Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary.RefCountedFreeLibrary(System.IntPtr library) -> void
Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary.Release() -> int
Microsoft.Diagnostics.Runtime.RegisterAttribute
Microsoft.Diagnostics.Runtime.RegisterAttribute.Name.get -> string?
Microsoft.Diagnostics.Runtime.RegisterAttribute.Name.set -> void
Microsoft.Diagnostics.Runtime.RegisterAttribute.RegisterAttribute(Microsoft.Diagnostics.Runtime.RegisterType registerType) -> void
Microsoft.Diagnostics.Runtime.RegisterAttribute.RegisterType.get -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.Control = 2 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.Debug = Microsoft.Diagnostics.Runtime.RegisterType.General | Microsoft.Diagnostics.Runtime.RegisterType.FloatingPoint -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.FloatingPoint = 4 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.FramePointer = 64 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.General = 1 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.ProgramCounter = 16 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.Segments = Microsoft.Diagnostics.Runtime.RegisterType.General | Microsoft.Diagnostics.Runtime.RegisterType.Control -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.StackPointer = 32 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RegisterType.TypeMask = 15 -> Microsoft.Diagnostics.Runtime.RegisterType
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.Address.get -> ulong
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.CreatorThread.get -> Microsoft.Diagnostics.Runtime.ClrThread?
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.IUnknown.get -> ulong
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.Interfaces.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ComInterfaceData>
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.IsDisconnected.get -> bool
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.Object.get -> ulong
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.RefCount.get -> int
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.RuntimeCallableWrapper(Microsoft.Diagnostics.Runtime.ClrRuntime! runtime, Microsoft.Diagnostics.Runtime.Implementation.IRcwData! data) -> void
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.VTablePointer.get -> ulong
Microsoft.Diagnostics.Runtime.RuntimeCallableWrapper.WinRTObject.get -> ulong
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.DacModuleIndex -> byte*
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.DbiModuleIndex -> byte*
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.ClrRuntimeInfo() -> void
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.RuntimeModuleIndex -> byte*
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.Signature -> byte*
Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.Version -> int
Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.StringCaching.Cache = 1 -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.StringCaching.Intern = 2 -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.StringCaching.None = 0 -> Microsoft.Diagnostics.Runtime.StringCaching
Microsoft.Diagnostics.Runtime.SyncBlock
Microsoft.Diagnostics.Runtime.SyncBlock.Object.get -> ulong
Microsoft.Diagnostics.Runtime.SyncBlock.SyncBlock(ulong obj) -> void
Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.SyncBlockComFlags.ComCallableWrapper = 1 -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.SyncBlockComFlags.ComClassFactory = 4 -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.SyncBlockComFlags.None = 0 -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.SyncBlockComFlags.RuntimeCallableWrapper = 2 -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.AddInterface(System.Guid guid, bool validate) -> Microsoft.Diagnostics.Runtime.Utilities.VTableBuilder!
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.AddRef() -> int
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.COMCallableIUnknown() -> void
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.IUnknown.get -> Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.IUnknownObject.get -> System.IntPtr
Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.Release() -> int
virtual Microsoft.Diagnostics.Runtime.Utilities.COMCallableIUnknown.Destroy() -> void
Microsoft.Diagnostics.Runtime.Utilities.COMHelper
Microsoft.Diagnostics.Runtime.Utilities.COMHelper.AddRefDelegate
Microsoft.Diagnostics.Runtime.Utilities.COMHelper.COMHelper() -> void
Microsoft.Diagnostics.Runtime.Utilities.COMHelper.QueryInterfaceDelegate
Microsoft.Diagnostics.Runtime.Utilities.COMHelper.ReleaseDelegate
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.AddRef() -> int
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.CallableCOMWrapper(Microsoft.Diagnostics.Runtime.RefCountedFreeLibrary? library, in System.Guid desiredInterface, System.IntPtr pUnknown) -> void
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.CallableCOMWrapper(Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper! toClone) -> void
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.Dispose() -> void
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.QueryInterface(in System.Guid riid) -> System.IntPtr
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.Release() -> int
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.Self.get -> System.IntPtr
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.SuppressRelease() -> void
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper._vtable.get -> void*
Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.~CallableCOMWrapper() -> void
Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo
Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo.Comments.get -> string?
Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo.FileVersion.get -> string?
Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo.VersionInfo.get -> Microsoft.Diagnostics.Runtime.VersionInfo
Microsoft.Diagnostics.Runtime.Utilities.HResult
Microsoft.Diagnostics.Runtime.Utilities.HResult.HResult(int hr) -> void
Microsoft.Diagnostics.Runtime.Utilities.HResult.IsOK.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.HResult.Value.get -> int
Microsoft.Diagnostics.Runtime.Utilities.HResult.Value.set -> void
Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable
Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable.AddRef -> delegate* unmanaged[Stdcall]<System.IntPtr, int>
Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable.IUnknownVTable() -> void
Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable.QueryInterface -> delegate* unmanaged[Stdcall]<System.IntPtr, in System.Guid, out System.IntPtr, Microsoft.Diagnostics.Runtime.Utilities.HResult>
Microsoft.Diagnostics.Runtime.Utilities.IUnknownVTable.Release -> delegate* unmanaged[Stdcall]<System.IntPtr, int>
Microsoft.Diagnostics.Runtime.Utilities.PEImage
Microsoft.Diagnostics.Runtime.Utilities.PEImage.CoffHeader.get -> System.Reflection.PortableExecutable.CoffHeader?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.CorHeader.get -> System.Reflection.PortableExecutable.CorHeader?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.DefaultPdb.get -> Microsoft.Diagnostics.Runtime.PdbInfo?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Dispose() -> void
Microsoft.Diagnostics.Runtime.Utilities.PEImage.GetFileVersionInfo() -> Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.IndexFileSize.get -> int
Microsoft.Diagnostics.Runtime.Utilities.PEImage.IndexTimeStamp.get -> int
Microsoft.Diagnostics.Runtime.Utilities.PEImage.IsManaged.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.PEImage.IsPE64.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.PEImage.IsValid.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.PEImage.PEHeader.get -> System.Reflection.PortableExecutable.PEHeader?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.PEImage(System.IO.Stream! stream, bool leaveOpen = false) -> void
Microsoft.Diagnostics.Runtime.Utilities.PEImage.PEImage(System.IO.Stream! stream, bool leaveOpen, bool isVirtual) -> void
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Pdbs.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.PdbInfo!>
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Read(int virtualAddress, System.Span<byte> dest) -> int
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Reader.get -> System.Reflection.PortableExecutable.PEReader?
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Resources.get -> Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry!
Microsoft.Diagnostics.Runtime.Utilities.PEImage.RvaToOffset(int virtualAddress) -> int
Microsoft.Diagnostics.Runtime.Utilities.PEImage.Sections.get -> System.Collections.Immutable.ImmutableArray<System.Reflection.PortableExecutable.SectionHeader>
Microsoft.Diagnostics.Runtime.Utilities.PEImage.TryGetExportSymbol(string! symbolName, out ulong offset) -> bool
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.ChildCount.get -> int
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.Children.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry!>
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.GetData(System.Span<byte> span) -> int
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.GetData<T>(int offset = 0) -> T
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.Image.get -> Microsoft.Diagnostics.Runtime.Utilities.PEImage!
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.IsLeaf.get -> bool
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.Name.get -> string!
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.Parent.get -> Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry?
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.Size.get -> int
Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.this[string! name].get -> Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry?
Microsoft.Diagnostics.Runtime.Utilities.SigParser
Microsoft.Diagnostics.Runtime.Utilities.SigParser.GetCallingConvInfo(out int data) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.GetData(out int data) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.GetElemType(out Microsoft.Diagnostics.Runtime.ClrElementType etype) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.GetElemType(out int etype) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.GetToken(out int token) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.IsNull() -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.PeekCallingConvInfo(out int data) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.PeekElemType(out Microsoft.Diagnostics.Runtime.ClrElementType etype) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.PeekElemType(out int etype) -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.SigParser(Microsoft.Diagnostics.Runtime.Utilities.SigParser rhs) -> void
Microsoft.Diagnostics.Runtime.Utilities.SigParser.SigParser(System.IntPtr sig, int len) -> void
Microsoft.Diagnostics.Runtime.Utilities.SigParser.SkipCustomModifiers() -> bool
Microsoft.Diagnostics.Runtime.Utilities.SigParser.SkipExactlyOne() -> bool
Microsoft.Diagnostics.Runtime.Utilities.VTableBuilder
Microsoft.Diagnostics.Runtime.Utilities.VTableBuilder.AddMethod(System.Delegate! func, bool validate = false) -> void
Microsoft.Diagnostics.Runtime.Utilities.VTableBuilder.Complete() -> System.IntPtr
Microsoft.Diagnostics.Runtime.VectorRegisterArea
Microsoft.Diagnostics.Runtime.VectorRegisterArea.Clear() -> void
Microsoft.Diagnostics.Runtime.VectorRegisterArea.VectorControl -> ulong
Microsoft.Diagnostics.Runtime.VectorRegisterArea.VectorRegister -> Microsoft.Diagnostics.Runtime.M128A[]?
Microsoft.Diagnostics.Runtime.VectorRegisterArea.VectorRegisterArea(Microsoft.Diagnostics.Runtime.VectorRegisterArea other) -> void
Microsoft.Diagnostics.Runtime.VersionInfo
Microsoft.Diagnostics.Runtime.VersionInfo.CompareTo(Microsoft.Diagnostics.Runtime.VersionInfo other) -> int
Microsoft.Diagnostics.Runtime.VersionInfo.Equals(Microsoft.Diagnostics.Runtime.VersionInfo other) -> bool
Microsoft.Diagnostics.Runtime.VersionInfo.Major.get -> int
Microsoft.Diagnostics.Runtime.VersionInfo.Minor.get -> int
Microsoft.Diagnostics.Runtime.VersionInfo.Patch.get -> int
Microsoft.Diagnostics.Runtime.VersionInfo.Revision.get -> int
Microsoft.Diagnostics.Runtime.VersionInfo.VersionInfo(int major, int minor, int revision, int patch) -> void
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AdjustDefault = 128 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AdjustGroups = 64 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AdjustPrivileges = 32 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AdjustSessionId = 256 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AllAccess = 983551 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.AssignPrimary = 1 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.Duplicate = 2 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.Impersonate = 4 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.MaximumAllowed = 33554432 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.Query = 8 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.QuerySource = 16 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.Read = 131080 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels.Write = 131296 -> Microsoft.Diagnostics.Runtime.Windows.TokenAccessLevels
Microsoft.Diagnostics.Runtime.X86Context
Microsoft.Diagnostics.Runtime.X86Context.ContextFlags -> uint
Microsoft.Diagnostics.Runtime.X86Context.ControlWord -> uint
Microsoft.Diagnostics.Runtime.X86Context.Cr0NpxState -> uint
Microsoft.Diagnostics.Runtime.X86Context.Cs -> uint
Microsoft.Diagnostics.Runtime.X86Context.DataOffset -> uint
Microsoft.Diagnostics.Runtime.X86Context.DataSelector -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr0 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr1 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr2 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr3 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr6 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Dr7 -> uint
Microsoft.Diagnostics.Runtime.X86Context.Ds -> uint
Microsoft.Diagnostics.Runtime.X86Context.EFlags -> uint
Microsoft.Diagnostics.Runtime.X86Context.Eax -> uint
Microsoft.Diagnostics.Runtime.X86Context.Ebp -> uint
Microsoft.Diagnostics.Runtime.X86Context.Ebx -> uint
Microsoft.Diagnostics.Runtime.X86Context.Ecx -> uint
Microsoft.Diagnostics.Runtime.X86Context.Edi -> uint
Microsoft.Diagnostics.Runtime.X86Context.Edx -> uint
Microsoft.Diagnostics.Runtime.X86Context.Eip -> uint
Microsoft.Diagnostics.Runtime.X86Context.ErrorOffset -> uint
Microsoft.Diagnostics.Runtime.X86Context.ErrorSelector -> uint
Microsoft.Diagnostics.Runtime.X86Context.Es -> uint
Microsoft.Diagnostics.Runtime.X86Context.Esi -> uint
Microsoft.Diagnostics.Runtime.X86Context.Esp -> uint
Microsoft.Diagnostics.Runtime.X86Context.ExtendedRegisters -> byte*
Microsoft.Diagnostics.Runtime.X86Context.Fs -> uint
Microsoft.Diagnostics.Runtime.X86Context.Gs -> uint
Microsoft.Diagnostics.Runtime.X86Context.ST0 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST1 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST2 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST3 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST4 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST5 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST6 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.ST7 -> Microsoft.Diagnostics.Runtime.Float80
Microsoft.Diagnostics.Runtime.X86Context.Ss -> uint
Microsoft.Diagnostics.Runtime.X86Context.StatusWord -> uint
Microsoft.Diagnostics.Runtime.X86Context.TagWord -> uint
Microsoft.Diagnostics.Runtime.X86Context.X86Context() -> void
Microsoft.Diagnostics.Runtime.XmmSaveArea
Microsoft.Diagnostics.Runtime.XmmSaveArea.Header -> Microsoft.Diagnostics.Runtime.M128A[]!
Microsoft.Diagnostics.Runtime.XmmSaveArea.Legacy -> Microsoft.Diagnostics.Runtime.M128A[]!
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm0 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm1 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm10 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm11 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm12 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm13 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm14 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm15 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm2 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm3 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm4 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm5 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm6 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm7 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm8 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.Xmm9 -> Microsoft.Diagnostics.Runtime.M128A
Microsoft.Diagnostics.Runtime.XmmSaveArea.XmmSaveArea() -> void
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.Address.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.ApplicationBase.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.ConfigurationFile.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.Id.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.Modules.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrModule!>
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.Name.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrAppDomain.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
abstract Microsoft.Diagnostics.Runtime.ClrField.ContainingType.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrField.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
abstract Microsoft.Diagnostics.Runtime.ClrField.IsInternal.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrField.IsPrivate.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrField.IsProtected.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrField.IsPublic.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrField.Name.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrField.Offset.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrField.Size.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrField.Token.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrField.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrHandle.Address.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrHandle.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
abstract Microsoft.Diagnostics.Runtime.ClrHandle.Dependent.get -> Microsoft.Diagnostics.Runtime.ClrObject
abstract Microsoft.Diagnostics.Runtime.ClrHandle.HandleKind.get -> Microsoft.Diagnostics.Runtime.ClrHandleKind
abstract Microsoft.Diagnostics.Runtime.ClrHandle.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
abstract Microsoft.Diagnostics.Runtime.ClrHandle.ReferenceCount.get -> uint
abstract Microsoft.Diagnostics.Runtime.ClrHeap.CanWalkHeap.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateAllocationContexts() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.MemoryRange>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateFinalizableObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateFinalizerRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrFinalizerRoot!>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateObjectReferences(ulong obj, Microsoft.Diagnostics.Runtime.ClrType! type, bool carefully, bool considerDependantHandles) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateReferencesWithFields(ulong obj, Microsoft.Diagnostics.Runtime.ClrType! type, bool carefully, bool considerDependantHandles) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrReference>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.EnumerateRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrRoot!>!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.ExceptionType.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.FreeType.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.GetComFlags(ulong obj) -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
abstract Microsoft.Diagnostics.Runtime.ClrHeap.GetObjectSize(ulong objRef, Microsoft.Diagnostics.Runtime.ClrType! type) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrHeap.GetObjectType(ulong objRef) -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrHeap.GetSegmentByAddress(ulong address) -> Microsoft.Diagnostics.Runtime.ClrSegment?
abstract Microsoft.Diagnostics.Runtime.ClrHeap.GetSyncBlock(ulong obj) -> Microsoft.Diagnostics.Runtime.SyncBlock?
abstract Microsoft.Diagnostics.Runtime.ClrHeap.IsServer.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrHeap.LogicalHeapCount.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrHeap.ObjectType.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
abstract Microsoft.Diagnostics.Runtime.ClrHeap.Segments.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrSegment!>
abstract Microsoft.Diagnostics.Runtime.ClrHeap.StringType.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrInstanceField.GetAddress(ulong objRef, bool interior) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrInstanceField.Read<T>(ulong objRef, bool interior) -> T
abstract Microsoft.Diagnostics.Runtime.ClrInstanceField.ReadObject(ulong objRef, bool interior) -> Microsoft.Diagnostics.Runtime.ClrObject
abstract Microsoft.Diagnostics.Runtime.ClrInstanceField.ReadString(ulong objRef, bool interior) -> string?
abstract Microsoft.Diagnostics.Runtime.ClrInstanceField.ReadStruct(ulong objRef, bool interior) -> Microsoft.Diagnostics.Runtime.ClrValueType
abstract Microsoft.Diagnostics.Runtime.ClrMethod.CompilationType.get -> Microsoft.Diagnostics.Runtime.MethodCompilationType
abstract Microsoft.Diagnostics.Runtime.ClrMethod.GetILOffset(ulong addr) -> int
abstract Microsoft.Diagnostics.Runtime.ClrMethod.HotColdInfo.get -> Microsoft.Diagnostics.Runtime.HotColdRegions
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IL.get -> Microsoft.Diagnostics.Runtime.ILInfo?
abstract Microsoft.Diagnostics.Runtime.ClrMethod.ILOffsetMap.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ILToNativeMap>
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsAbstract.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsFinal.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsInternal.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsPInvoke.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsPrivate.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsProtected.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsPublic.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsRTSpecialName.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsSpecialName.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsStatic.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.IsVirtual.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrMethod.MetadataToken.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrMethod.MethodDesc.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrMethod.Name.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrMethod.NativeCode.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrMethod.Signature.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrMethod.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
abstract Microsoft.Diagnostics.Runtime.ClrModule.Address.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrModule.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
abstract Microsoft.Diagnostics.Runtime.ClrModule.AssemblyAddress.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrModule.AssemblyName.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrModule.DebuggingMode.get -> System.Diagnostics.DebuggableAttribute.DebuggingModes
abstract Microsoft.Diagnostics.Runtime.ClrModule.EnumerateTypeDefToMethodTableMap() -> System.Collections.Generic.IEnumerable<(ulong MethodTable, int Token)>!
abstract Microsoft.Diagnostics.Runtime.ClrModule.GetTypeByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrModule.ImageBase.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrModule.IsDynamic.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrModule.IsPEFile.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrModule.Layout.get -> Microsoft.Diagnostics.Runtime.ModuleLayout
abstract Microsoft.Diagnostics.Runtime.ClrModule.MetadataAddress.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrModule.MetadataLength.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrModule.Name.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrModule.Pdb.get -> Microsoft.Diagnostics.Runtime.PdbInfo?
abstract Microsoft.Diagnostics.Runtime.ClrModule.ResolveToken(int typeDefOrRefToken) -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrModule.Size.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.AppDomains.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrAppDomain!>
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.BaseClassLibrary.get -> Microsoft.Diagnostics.Runtime.ClrModule!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.ClrInfo.get -> Microsoft.Diagnostics.Runtime.ClrInfo!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.DacLibrary.get -> Microsoft.Diagnostics.Runtime.DacLibrary!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.DataTarget.get -> Microsoft.Diagnostics.Runtime.DataTarget!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.Dispose(bool disposing) -> void
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.EnumerateHandles() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrHandle!>!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.EnumerateModules() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrModule!>!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.FlushCachedData() -> void
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.GetJitHelperFunctionName(ulong address) -> string?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.GetMethodByHandle(ulong methodHandle) -> Microsoft.Diagnostics.Runtime.ClrMethod?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.GetMethodByInstructionPointer(ulong ip) -> Microsoft.Diagnostics.Runtime.ClrMethod?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.GetTypeByMethodTable(ulong methodTable) -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.IsThreadSafe.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.SharedDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.SystemDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain?
abstract Microsoft.Diagnostics.Runtime.ClrRuntime.Threads.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrThread!>
abstract Microsoft.Diagnostics.Runtime.ClrSegment.CommittedMemory.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrSegment.EnumerateObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
abstract Microsoft.Diagnostics.Runtime.ClrSegment.FirstObjectAddress.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrSegment.Generation0.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrSegment.Generation1.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrSegment.Generation2.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrSegment.GetNextObjectAddress(ulong obj) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrSegment.GetPreviousObjectAddress(ulong obj) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrSegment.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
abstract Microsoft.Diagnostics.Runtime.ClrSegment.IsEphemeralSegment.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrSegment.IsLargeObjectSegment.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrSegment.IsPinnedObjectSegment.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrSegment.LogicalHeap.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrSegment.ObjectRange.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrSegment.ReservedMemory.get -> Microsoft.Diagnostics.Runtime.MemoryRange
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.Context.get -> System.ReadOnlySpan<byte>
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.FrameName.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.InstructionPointer.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.Kind.get -> Microsoft.Diagnostics.Runtime.ClrStackFrameKind
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.Method.get -> Microsoft.Diagnostics.Runtime.ClrMethod?
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.StackPointer.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrStackFrame.Thread.get -> Microsoft.Diagnostics.Runtime.ClrThread?
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.GetAddress(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.IsInitialized(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> bool
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.Read<T>(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> T
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.ReadObject(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> Microsoft.Diagnostics.Runtime.ClrObject
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.ReadString(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> string?
abstract Microsoft.Diagnostics.Runtime.ClrStaticField.ReadStruct(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> Microsoft.Diagnostics.Runtime.ClrValueType
abstract Microsoft.Diagnostics.Runtime.ClrThread.Address.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrThread.CurrentAppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
abstract Microsoft.Diagnostics.Runtime.ClrThread.CurrentException.get -> Microsoft.Diagnostics.Runtime.ClrException?
abstract Microsoft.Diagnostics.Runtime.ClrThread.EnumerateStackRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrStackRoot!>!
abstract Microsoft.Diagnostics.Runtime.ClrThread.EnumerateStackTrace(bool includeContext = false) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrStackFrame!>!
abstract Microsoft.Diagnostics.Runtime.ClrThread.GCMode.get -> Microsoft.Diagnostics.Runtime.GCMode
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsAbortRequested.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsAborted.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsAlive.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsBackground.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsCoInitialized.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsDebugSuspended.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsFinalizer.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsGCSuspendPending.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsMTA.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsSTA.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsUnstarted.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.IsUserSuspended.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrThread.LockCount.get -> uint
abstract Microsoft.Diagnostics.Runtime.ClrThread.ManagedThreadId.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrThread.OSThreadId.get -> uint
abstract Microsoft.Diagnostics.Runtime.ClrThread.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
abstract Microsoft.Diagnostics.Runtime.ClrThread.StackBase.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrThread.StackLimit.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrType.AsEnum() -> Microsoft.Diagnostics.Runtime.ClrEnum!
abstract Microsoft.Diagnostics.Runtime.ClrType.BaseType.get -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrType.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
abstract Microsoft.Diagnostics.Runtime.ClrType.ComponentSize.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType?
abstract Microsoft.Diagnostics.Runtime.ClrType.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
abstract Microsoft.Diagnostics.Runtime.ClrType.EnumerateInterfaces() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrInterface!>!
abstract Microsoft.Diagnostics.Runtime.ClrType.Fields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!>
abstract Microsoft.Diagnostics.Runtime.ClrType.GCDesc.get -> Microsoft.Diagnostics.Runtime.GCDesc
abstract Microsoft.Diagnostics.Runtime.ClrType.GetArrayElementAddress(ulong objRef, int index) -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrType.GetFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
abstract Microsoft.Diagnostics.Runtime.ClrType.GetStaticFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrStaticField?
abstract Microsoft.Diagnostics.Runtime.ClrType.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
abstract Microsoft.Diagnostics.Runtime.ClrType.IsAbstract.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsArray.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsEnum.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsFinalizable.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsFinalizeSuppressed(ulong obj) -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsInterface.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsInternal.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsPrivate.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsProtected.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsPublic.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsSealed.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.IsShared.get -> bool
abstract Microsoft.Diagnostics.Runtime.ClrType.MetadataToken.get -> int
abstract Microsoft.Diagnostics.Runtime.ClrType.MethodTable.get -> ulong
abstract Microsoft.Diagnostics.Runtime.ClrType.Methods.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!>
abstract Microsoft.Diagnostics.Runtime.ClrType.Module.get -> Microsoft.Diagnostics.Runtime.ClrModule?
abstract Microsoft.Diagnostics.Runtime.ClrType.Name.get -> string?
abstract Microsoft.Diagnostics.Runtime.ClrType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
abstract Microsoft.Diagnostics.Runtime.ClrType.StaticFields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!>
abstract Microsoft.Diagnostics.Runtime.ClrType.StaticSize.get -> int
abstract Microsoft.Diagnostics.Runtime.PlatformFunctions.FreeLibrary(System.IntPtr handle) -> bool
abstract Microsoft.Diagnostics.Runtime.PlatformFunctions.GetLibraryExport(System.IntPtr handle, string! name) -> System.IntPtr
abstract Microsoft.Diagnostics.Runtime.PlatformFunctions.LoadLibrary(string! libraryPath) -> System.IntPtr
abstract Microsoft.Diagnostics.Runtime.PlatformFunctions.TryGetWow64(System.IntPtr proc, out bool result) -> bool
const Microsoft.Diagnostics.Runtime.AMD64Context.Context = 1048576 -> uint
const Microsoft.Diagnostics.Runtime.AMD64Context.ContextControl = 1048577 -> uint
const Microsoft.Diagnostics.Runtime.AMD64Context.ContextDebugRegisters = 1048592 -> uint
const Microsoft.Diagnostics.Runtime.AMD64Context.ContextFloatingPoint = 1048584 -> uint
const Microsoft.Diagnostics.Runtime.AMD64Context.ContextInteger = 1048578 -> uint
const Microsoft.Diagnostics.Runtime.AMD64Context.ContextSegments = 1048580 -> uint
const Microsoft.Diagnostics.Runtime.Arm64Context.Context = 4194304 -> uint
const Microsoft.Diagnostics.Runtime.Arm64Context.ContextControl = 4194305 -> uint
const Microsoft.Diagnostics.Runtime.Arm64Context.ContextDebugRegisters = 4194312 -> uint
const Microsoft.Diagnostics.Runtime.Arm64Context.ContextFloatingPoint = 4194308 -> uint
const Microsoft.Diagnostics.Runtime.Arm64Context.ContextInteger = 4194306 -> uint
const Microsoft.Diagnostics.Runtime.ArmContext.Context = 2097152 -> uint
const Microsoft.Diagnostics.Runtime.ArmContext.ContextControl = 2097153 -> uint
const Microsoft.Diagnostics.Runtime.ArmContext.ContextDebugRegisters = 2097160 -> uint
const Microsoft.Diagnostics.Runtime.ArmContext.ContextFloatingPoint = 2097156 -> uint
const Microsoft.Diagnostics.Runtime.ArmContext.ContextInteger = 2097154 -> uint
const Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.SignatureValue = "DotNetRuntimeInfo\0" -> string!
const Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.SignatureValueLength = 18 -> int
const Microsoft.Diagnostics.Runtime.ClrRuntimeInfo.SymbolValue = "DotNetRuntimeInfo" -> string!
const Microsoft.Diagnostics.Runtime.Utilities.HResult.E_FAIL = -2147467259 -> int
const Microsoft.Diagnostics.Runtime.Utilities.HResult.E_INVALIDARG = -2147024809 -> int
const Microsoft.Diagnostics.Runtime.Utilities.HResult.E_NOINTERFACE = -2147467262 -> int
const Microsoft.Diagnostics.Runtime.Utilities.HResult.E_NOTIMPL = -2147467263 -> int
const Microsoft.Diagnostics.Runtime.Utilities.HResult.S_FALSE = 1 -> int
const Microsoft.Diagnostics.Runtime.Utilities.HResult.S_OK = 0 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_EXPLICITTHIS = 64 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_FIELD = 6 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_GENERIC = 16 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_GENERICINST = 10 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_HASTHIS = 32 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_LOCAL_SIG = 7 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_MASK = 15 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_MAX = 12 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_NATIVEVARARG = 11 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_PROPERTY = 8 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_UNMGD = 9 -> int
const Microsoft.Diagnostics.Runtime.Utilities.SigParser.IMAGE_CEE_CS_CALLCONV_VARARG = 5 -> int
const Microsoft.Diagnostics.Runtime.VectorRegisterArea.VectorRegisterSize = 26 -> int
const Microsoft.Diagnostics.Runtime.X86Context.Context = 65536 -> uint
const Microsoft.Diagnostics.Runtime.X86Context.ContextControl = 65537 -> uint
const Microsoft.Diagnostics.Runtime.X86Context.ContextDebugRegisters = 65552 -> uint
const Microsoft.Diagnostics.Runtime.X86Context.ContextFloatingPoint = 65544 -> uint
const Microsoft.Diagnostics.Runtime.X86Context.ContextInteger = 65538 -> uint
const Microsoft.Diagnostics.Runtime.X86Context.ContextSegments = 65540 -> uint
const Microsoft.Diagnostics.Runtime.XmmSaveArea.HeaderSize = 2 -> int
const Microsoft.Diagnostics.Runtime.XmmSaveArea.LegacySize = 8 -> int
override Microsoft.Diagnostics.Runtime.ClrAppDomain.ToString() -> string?
override Microsoft.Diagnostics.Runtime.ClrArray.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrArray.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrDiagnosticsException.GetObjectData(System.Runtime.Serialization.SerializationInfo! info, System.Runtime.Serialization.StreamingContext context) -> void
override Microsoft.Diagnostics.Runtime.ClrException.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrField.ToString() -> string?
override Microsoft.Diagnostics.Runtime.ClrFinalizerRoot.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrHandle.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrHeap.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrInfo.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrInterface.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrInterface.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrInterface.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrMethod.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrMethod.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrModule.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrModule.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrModule.ToString() -> string?
override Microsoft.Diagnostics.Runtime.ClrObject.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrObject.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrObject.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrReference.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrSegment.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrStackInteriorRoot.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrStackRoot.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ClrType.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.ClrType.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.ClrType.ToString() -> string?
override Microsoft.Diagnostics.Runtime.CustomDataTarget.ToString() -> string!
override Microsoft.Diagnostics.Runtime.GCRootPath.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ILToNativeMap.ToString() -> string!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.ApplicationBase.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.ConfigurationFile.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.Id.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.Modules.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrModule!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdAppDomain.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.ComponentSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.GetArrayElementAddress(ulong objRef, int index) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdArrayType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.AsEnum() -> Microsoft.Diagnostics.Runtime.ClrEnum!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.BaseType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ComponentSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.EnumerateInterfaces() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrInterface!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.Fields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.GCDesc.get -> Microsoft.Diagnostics.Runtime.GCDesc
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.GetArrayElementAddress(ulong objRef, int index) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.GetFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.GetStaticFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrStaticField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsAbstract.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsArray.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsEnum.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsFinalizable.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsFinalizeSuppressed(ulong obj) -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsInterface.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsPointer.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsSealed.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.IsShared.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.MetadataToken.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.MethodTable.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.Methods.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.Module.get -> Microsoft.Diagnostics.Runtime.ClrModule!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.Name.get -> string!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.StaticFields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdConstructedType.StaticSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.Dependent.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.HandleKind.get -> Microsoft.Diagnostics.Runtime.ClrHandleKind
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdDependentHandle.ReferenceCount.get -> uint
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ContainingType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.GetAddress(ulong objRef, bool interior = false) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsObjectReference.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsPrimitive.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.IsValueType.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Offset.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Read<T>(ulong objRef, bool interior) -> T
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ReadObject(ulong objRef, bool interior) -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ReadString(ulong objRef, bool interior) -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.ReadStruct(ulong objRef, bool interior) -> Microsoft.Diagnostics.Runtime.ClrValueType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Size.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Token.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdField.Type.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.AsEnum() -> Microsoft.Diagnostics.Runtime.ClrEnum!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.BaseType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ComponentSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.EnumerateInterfaces() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrInterface!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.Fields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.GCDesc.get -> Microsoft.Diagnostics.Runtime.GCDesc
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.GetArrayElementAddress(ulong objRef, int index) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.GetFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.GetStaticFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrStaticField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsAbstract.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsArray.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsEnum.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsFinalizable.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsFinalizeSuppressed(ulong obj) -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsInterface.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsSealed.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.IsShared.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.MetadataToken.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.MethodTable.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.Methods.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.Module.get -> Microsoft.Diagnostics.Runtime.ClrModule?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.StaticFields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdGenericType.StaticSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.Dependent.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.HandleKind.get -> Microsoft.Diagnostics.Runtime.ClrHandleKind
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHandle.ReferenceCount.get -> uint
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.CanWalkHeap.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateAllocationContexts() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.MemoryRange>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateFinalizableObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateFinalizerRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrFinalizerRoot!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateObjectReferences(ulong obj, Microsoft.Diagnostics.Runtime.ClrType! type, bool carefully, bool considerDependantHandles) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateReferencesWithFields(ulong obj, Microsoft.Diagnostics.Runtime.ClrType! type, bool carefully, bool considerDependantHandles) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrReference>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.EnumerateRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrRoot!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.ExceptionType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.FreeType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.GetComFlags(ulong obj) -> Microsoft.Diagnostics.Runtime.SyncBlockComFlags
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.GetObjectSize(ulong objRef, Microsoft.Diagnostics.Runtime.ClrType! type) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.GetObjectType(ulong objRef) -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.GetSegmentByAddress(ulong address) -> Microsoft.Diagnostics.Runtime.ClrSegment?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.GetSyncBlock(ulong obj) -> Microsoft.Diagnostics.Runtime.SyncBlock?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.IsServer.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.LogicalHeapCount.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.ObjectType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.Segments.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrSegment!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdHeap.StringType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.CompilationType.get -> Microsoft.Diagnostics.Runtime.MethodCompilationType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.GetILOffset(ulong addr) -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.HotColdInfo.get -> Microsoft.Diagnostics.Runtime.HotColdRegions
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IL.get -> Microsoft.Diagnostics.Runtime.ILInfo?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.ILOffsetMap.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ILToNativeMap>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsAbstract.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsFinal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsPInvoke.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsRTSpecialName.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsSpecialName.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsStatic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.IsVirtual.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.MetadataToken.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.MethodDesc.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.NativeCode.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.Signature.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.ToString() -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdMethod.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.AssemblyAddress.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.AssemblyName.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.DebuggingMode.get -> System.Diagnostics.DebuggableAttribute.DebuggingModes
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.EnumerateTypeDefToMethodTableMap() -> System.Collections.Generic.IEnumerable<(ulong MethodTable, int Token)>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.GetTypeByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.ImageBase.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.IsDynamic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.IsPEFile.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.Layout.get -> Microsoft.Diagnostics.Runtime.ModuleLayout
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.MetadataAddress.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.MetadataImport.get -> Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.MetadataLength.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.Pdb.get -> Microsoft.Diagnostics.Runtime.PdbInfo?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.ResolveToken(int typeDefOrRefToken) -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdModule.Size.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.AsEnum() -> Microsoft.Diagnostics.Runtime.ClrEnum!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.BaseType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ComponentSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.EnumerateInterfaces() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrInterface!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.Fields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.GCDesc.get -> Microsoft.Diagnostics.Runtime.GCDesc
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.GetArrayElementAddress(ulong objRef, int index) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.GetFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.GetStaticFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrStaticField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsAbstract.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsArray.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsEnum.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsFinalizable.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsFinalizeSuppressed(ulong obj) -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsInterface.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsSealed.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.IsShared.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.MetadataToken.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.MethodTable.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.Methods.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.Module.get -> Microsoft.Diagnostics.Runtime.ClrModule!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.Name.get -> string!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.StaticFields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdPrimitiveType.StaticSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.AppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.Dependent.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.HandleKind.get -> Microsoft.Diagnostics.Runtime.ClrHandleKind
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.Object.get -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRefCountedHandle.ReferenceCount.get -> uint
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.AppDomains.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrAppDomain!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.BaseClassLibrary.get -> Microsoft.Diagnostics.Runtime.ClrModule!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.ClrInfo.get -> Microsoft.Diagnostics.Runtime.ClrInfo!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.DacLibrary.get -> Microsoft.Diagnostics.Runtime.DacLibrary!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.DataTarget.get -> Microsoft.Diagnostics.Runtime.DataTarget!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.EnumerateHandles() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrHandle!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.EnumerateModules() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrModule!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.FlushCachedData() -> void
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.GetJitHelperFunctionName(ulong ip) -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.GetMethodByHandle(ulong methodHandle) -> Microsoft.Diagnostics.Runtime.ClrMethod?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.GetMethodByInstructionPointer(ulong ip) -> Microsoft.Diagnostics.Runtime.ClrMethod?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.GetTypeByMethodTable(ulong methodTable) -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.IsThreadSafe.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.SharedDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.SystemDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdRuntime.Threads.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrThread!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.CommittedMemory.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.EnumerateObjects() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrObject>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.FirstObjectAddress.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.Generation0.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.Generation1.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.Generation2.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.GetNextObjectAddress(ulong addr) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.GetPreviousObjectAddress(ulong addr) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.IsEphemeralSegment.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.IsLargeObjectSegment.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.IsPinnedObjectSegment.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.LogicalHeap.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.ObjectRange.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdSegment.ReservedMemory.get -> Microsoft.Diagnostics.Runtime.MemoryRange
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ContainingType.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.GetAddress(Microsoft.Diagnostics.Runtime.ClrAppDomain! domain) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsInitialized(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsObjectReference.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsPrimitive.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.IsValueType.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Offset.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Read<T>(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> T
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ReadObject(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> Microsoft.Diagnostics.Runtime.ClrObject
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ReadString(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.ReadStruct(Microsoft.Diagnostics.Runtime.ClrAppDomain! appDomain) -> Microsoft.Diagnostics.Runtime.ClrValueType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Size.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Token.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdStaticField.Type.get -> Microsoft.Diagnostics.Runtime.ClrType!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.Address.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.CurrentAppDomain.get -> Microsoft.Diagnostics.Runtime.ClrAppDomain!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.CurrentException.get -> Microsoft.Diagnostics.Runtime.ClrException?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.EnumerateStackRoots() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.IClrStackRoot!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.EnumerateStackTrace(bool includeContext) -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrStackFrame!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.GCMode.get -> Microsoft.Diagnostics.Runtime.GCMode
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsAbortRequested.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsAborted.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsAlive.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsBackground.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsCoInitialized.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsDebugSuspended.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsFinalizer.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsGCSuspendPending.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsMTA.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsSTA.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsUnstarted.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.IsUserSuspended.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.LockCount.get -> uint
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.ManagedThreadId.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.OSThreadId.get -> uint
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.Runtime.get -> Microsoft.Diagnostics.Runtime.ClrRuntime!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.StackBase.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdThread.StackLimit.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.AsEnum() -> Microsoft.Diagnostics.Runtime.ClrEnum!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.AssemblyLoadContextAddress.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.BaseType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ClrObjectHelpers.get -> Microsoft.Diagnostics.Runtime.Implementation.IClrObjectHelpers!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ComponentSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ComponentType.get -> Microsoft.Diagnostics.Runtime.ClrType?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ContainsPointers.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ElementType.get -> Microsoft.Diagnostics.Runtime.ClrElementType
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.EnumerateGenericParameters() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrGenericParameter>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.EnumerateInterfaces() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrInterface!>!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Fields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrInstanceField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.GCDesc.get -> Microsoft.Diagnostics.Runtime.GCDesc
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.GetArrayElementAddress(ulong objRef, int index) -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.GetFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrInstanceField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.GetStaticFieldByName(string! name) -> Microsoft.Diagnostics.Runtime.ClrStaticField?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Heap.get -> Microsoft.Diagnostics.Runtime.ClrHeap!
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsAbstract.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsArray.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsCollectible.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsEnum.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsException.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsFinalizable.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsFinalizeSuppressed(ulong obj) -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsFree.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsInterface.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsInternal.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsPrivate.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsProtected.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsPublic.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsSealed.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsShared.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.IsString.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.LoaderAllocatorHandle.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.MetadataToken.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.MethodTable.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Methods.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrMethod!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Module.get -> Microsoft.Diagnostics.Runtime.ClrModule?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.Name.get -> string?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.ReadArrayElements<T>(ulong objRef, int start, int count) -> T[]?
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.StaticFields.get -> System.Collections.Immutable.ImmutableArray<Microsoft.Diagnostics.Runtime.ClrStaticField!>
override Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.StaticSize.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock.IsComCallWrapper.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock.IsComClassFactory.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.ComSyncBlock.IsRuntimeCallWrapper.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.HoldingThreadAddress.get -> ulong
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.IsComCallWrapper.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.IsComClassFactory.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.IsMonitorHeld.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.IsRuntimeCallWrapper.get -> bool
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.RecursionCount.get -> int
override Microsoft.Diagnostics.Runtime.Implementation.FullSyncBlock.WaitingThreadCount.get -> int
override Microsoft.Diagnostics.Runtime.Utilities.ElfLoadedImage.ToString() -> string!
override Microsoft.Diagnostics.Runtime.M128A.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.M128A.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.MemoryRange.ToString() -> string!
override Microsoft.Diagnostics.Runtime.ModuleInfo.ToString() -> string?
override Microsoft.Diagnostics.Runtime.PdbInfo.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.PdbInfo.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.PdbInfo.ToString() -> string!
override Microsoft.Diagnostics.Runtime.Utilities.FileVersionInfo.ToString() -> string?
override Microsoft.Diagnostics.Runtime.Utilities.HResult.ToString() -> string!
override Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.ToString() -> string!
override Microsoft.Diagnostics.Runtime.VersionInfo.Equals(object? obj) -> bool
override Microsoft.Diagnostics.Runtime.VersionInfo.GetHashCode() -> int
override Microsoft.Diagnostics.Runtime.VersionInfo.ToString() -> string!
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.AssemblyCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.DomainLocalBlock -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.DomainLocalModules -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.FailedAssemblyCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.HighFrequencyHeap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.Id -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.LowFrequencyHeap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.SecurityDescriptor -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.Stage -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainData.StubHeap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData.AppDomainCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData.SharedDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AppDomainStoreData.SystemDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.AppDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.AssemblySecurityDescriptor -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.ClassLoader -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.Dynamic -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.IsDomainNeutral -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.LoadContext -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.LocationFlags -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.ModuleCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.AssemblyData.ParentDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData.ComContext -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData.InterfacePointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.COMInterfacePointerData.MethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.CCWAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.Handle -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.HasStrongRef -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.HasWeakReference -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.InterfaceCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.IsAggregated -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.IsExtendsCOMObject -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.IsGlobalPegged -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.IsNeutered -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.IsPegged -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.JupiterRefCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.ManagedObject -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.OuterIUnknown -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CcwData.RefCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.ColdRegionSize -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.ColdRegionStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.GCInfo -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.HotRegionSize -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.JITType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.MethodDesc -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.MethodSize -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.CodeHeaderData.MethodStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.ArrayMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.ExceptionMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.FreeMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.ObjectMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.CommonMethodTables.StringMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.AppDomainAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.ClassData -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.DynamicClassTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.GCStaticDataStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.ModuleID -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.DomainLocalModuleData.NonGCStaticDataStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.ElementType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.FieldToken -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.IsContextLocal -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.IsStatic -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.IsThreadLocal -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.MTOfEnclosingClass -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.NextField -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.Offset -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.SigType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.TypeMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.TypeModule -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldData.TypeToken -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.ContextStaticOffset -> short
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.ContextStaticsSize -> short
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.FirstFieldAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.NumInstanceFields -> short
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.NumStaticFields -> short
readonly Microsoft.Diagnostics.Runtime.DacInterface.FieldInfo.NumThreadStaticFields -> short
readonly Microsoft.Diagnostics.Runtime.DacInterface.GCInfo.GCStructuresValid -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.GCInfo.HeapCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.GCInfo.MaxGeneration -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.GCInfo.ServerMode -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.GenerationData.AllocationContextLimit -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.GenerationData.AllocationContextPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.GenerationData.AllocationStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.GenerationData.StartSegment -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.AppDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.Handle -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.IsPegged -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.JupiterRefCount -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.RefCount -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.Secondary -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.StrongReference -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.HandleData.Type -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.Allocated -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.BackgroundSavedHighestAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.BackgroundSavedLowestAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.CAllocateLH -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.CardTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.EphemeralHeapSegment -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.FinalizationFillPointers -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress[]!
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.GenerationTable -> Microsoft.Diagnostics.Runtime.DacInterface.GenerationData[]!
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.HighestAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.LowestAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.MarkArray -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.NextSweepObj -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.SavedSweepEphemeralSeg -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.HeapDetails.SavedSweepEphemeralStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo.CurrentAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitCodeHeapInfo.Type -> Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo.HeapList -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.JitManagerInfo.Type -> Microsoft.Diagnostics.Runtime.DacInterface.CodeHeapType
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.AddressOfNativeCodeSlot -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.GCInfo -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.GCStressCodeCopy -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.HasNativeCode -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.IsDynamic -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.JittedRejitVersions -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.MDToken -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.ManagedDynamicMethodObject -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.MethodDesc -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.MethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.Module -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.NativeCodeAddr -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.RejitDataCurrent -> Microsoft.Diagnostics.Runtime.DacInterface.RejitData
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.RejitDataRequested -> Microsoft.Diagnostics.Runtime.DacInterface.RejitData
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.RequestedIP -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodDescData.SlotNumber -> ushort
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableCollectibleData.Collectible -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableCollectibleData.LoaderAllocatorObjectHandle -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.AttrClass -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.BaseSize -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.ComponentSize -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.ContainsPointers -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.Dynamic -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.EEClass -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.IsFree -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.Module -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.NumInterfaces -> ushort
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.NumMethods -> ushort
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.NumVirtuals -> ushort
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.NumVtableSlots -> ushort
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.ParentMethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.Shared -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.MethodTableData.Token -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.Assembly -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.BaseClassIndex -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.FieldDefToDescMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.FileReferencesMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ILBase -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.IsPEFile -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.IsReflection -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.LookupTableHeap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ManifestModuleReferencesMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.MemberRefToDescMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.MetadataSize -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.MetadataStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.MethodDefToDescMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ModuleID -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ModuleIndex -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.PEFile -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.ThunkHeap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.TransientFlags -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.TypeDefToMethodTableMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ModuleData.TypeRefToMethodTableMap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ArrayBoundsPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ArrayDataPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ArrayLowerBoundsPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.CCW -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ComponentSize -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ElementType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ElementTypeHandle -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.MethodTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.NumComponents -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.ObjectType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.RCW -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.Rank -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ObjectData.Size -> ulong
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.CTXCookie -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.CreatorThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IUnknownPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IdentityPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.InterfaceCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IsAggregated -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IsContained -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IsDisconnected -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IsFreeThreaded -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.IsJupiterObject -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.JupiterObject -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.ManagedObject -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.RefCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.SupportsIInspectable -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.RcwData.VTablePointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Allocated -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.BackgroundAllocated -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Committed -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Flags -> System.IntPtr
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Heap -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.HighAllocMark -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Next -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Reserved -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Start -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SegmentData.Used -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Flags -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.HasRegisterInformation -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Object -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Offset -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Register -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.Source -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.SourceType -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.StackRefData.StackPointer -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.AdditionalThreadCount -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.Address -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.AppDomain -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.COMFlags -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.Free -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.HoldingThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.MonitorHeld -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.Object -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.Recursion -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.SyncBlockData.TotalSyncBlockCount -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.LockCount -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.ManagedThreadId -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.OSThreadId -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.PreemptiveGCDisabled -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadData.State -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.ClassData -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.DynamicClassTable -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.GCStaticDataStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.ModuleIndex -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.NonGCStaticDataStart -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadLocalModuleData.ThreadAddress -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.AsyncTimerCallbackCompletionFPtr -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.CpuUtilization -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.CurrentLimitTotalCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.FirstUnmanagedWorkRequest -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.HillClimbingLog -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.HillClimbingLogFirstIndex -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.HillClimbingLogSize -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.MaxFreeCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.MaxLimitTotalCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.MaxLimitTotalWorkerThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.MinLimitTotalCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.MinLimitTotalWorkerThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumFreeCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumIdleWorkerThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumRetiredCPThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumRetiredWorkerThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumTimers -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadPoolData.NumWorkingWorkerThreads -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.BackgroundThreadCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.DeadThreadCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.FinalizerThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.FirstThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.GCThread -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.HostConfig -> uint
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.PendingThreadCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.ThreadCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.ThreadStoreData.UnstartedThreadCount -> int
readonly Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData.Context -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData.Function -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.DacInterface.WorkRequestData.NextWorkRequest -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
readonly Microsoft.Diagnostics.Runtime.Float80.Exponent -> ushort
readonly Microsoft.Diagnostics.Runtime.Float80.Mantissa -> ulong
static Microsoft.Diagnostics.Runtime.AMD64Context.Size.get -> int
static Microsoft.Diagnostics.Runtime.Arm64Context.Size.get -> int
static Microsoft.Diagnostics.Runtime.ArmContext.Size.get -> int
static Microsoft.Diagnostics.Runtime.ClrArray.operator !=(Microsoft.Diagnostics.Runtime.ClrArray left, Microsoft.Diagnostics.Runtime.ClrArray right) -> bool
static Microsoft.Diagnostics.Runtime.ClrArray.operator ==(Microsoft.Diagnostics.Runtime.ClrArray left, Microsoft.Diagnostics.Runtime.ClrArray right) -> bool
static Microsoft.Diagnostics.Runtime.ClrInfoProvider.GetDacFileName(Microsoft.Diagnostics.Runtime.ClrFlavor flavor, System.Runtime.InteropServices.OSPlatform platform) -> string!
static Microsoft.Diagnostics.Runtime.ClrInfoProvider.GetDacRequestFileName(Microsoft.Diagnostics.Runtime.ClrFlavor flavor, Microsoft.Diagnostics.Runtime.Architecture currentArchitecture, Microsoft.Diagnostics.Runtime.Architecture targetArchitecture, Microsoft.Diagnostics.Runtime.VersionInfo version, System.Runtime.InteropServices.OSPlatform platform) -> string!
static Microsoft.Diagnostics.Runtime.ClrInfoProvider.IsSupportedRuntime(Microsoft.Diagnostics.Runtime.ModuleInfo! moduleInfo, out Microsoft.Diagnostics.Runtime.ClrFlavor flavor, out System.Runtime.InteropServices.OSPlatform platform) -> bool
static Microsoft.Diagnostics.Runtime.ClrInterface.operator !=(Microsoft.Diagnostics.Runtime.ClrInterface? left, Microsoft.Diagnostics.Runtime.ClrInterface? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrInterface.operator ==(Microsoft.Diagnostics.Runtime.ClrInterface? left, Microsoft.Diagnostics.Runtime.ClrInterface? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrMethod.operator !=(Microsoft.Diagnostics.Runtime.ClrMethod? left, Microsoft.Diagnostics.Runtime.ClrMethod? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrMethod.operator ==(Microsoft.Diagnostics.Runtime.ClrMethod? left, Microsoft.Diagnostics.Runtime.ClrMethod? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrModule.operator !=(Microsoft.Diagnostics.Runtime.ClrModule? left, Microsoft.Diagnostics.Runtime.ClrModule? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrModule.operator ==(Microsoft.Diagnostics.Runtime.ClrModule? left, Microsoft.Diagnostics.Runtime.ClrModule? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrObject.explicit operator string?(Microsoft.Diagnostics.Runtime.ClrObject obj) -> string?
static Microsoft.Diagnostics.Runtime.ClrObject.implicit operator ulong(Microsoft.Diagnostics.Runtime.ClrObject clrObject) -> ulong
static Microsoft.Diagnostics.Runtime.ClrObject.operator !=(Microsoft.Diagnostics.Runtime.ClrObject left, Microsoft.Diagnostics.Runtime.ClrObject right) -> bool
static Microsoft.Diagnostics.Runtime.ClrObject.operator ==(Microsoft.Diagnostics.Runtime.ClrObject left, Microsoft.Diagnostics.Runtime.ClrObject right) -> bool
static Microsoft.Diagnostics.Runtime.ClrReference.CreateFromDependentHandle(Microsoft.Diagnostics.Runtime.ClrObject reference) -> Microsoft.Diagnostics.Runtime.ClrReference
static Microsoft.Diagnostics.Runtime.ClrReference.CreateFromFieldOrArray(Microsoft.Diagnostics.Runtime.ClrObject reference, Microsoft.Diagnostics.Runtime.ClrType! containingType, int offset) -> Microsoft.Diagnostics.Runtime.ClrReference
static Microsoft.Diagnostics.Runtime.ClrType.operator !=(Microsoft.Diagnostics.Runtime.ClrType? left, Microsoft.Diagnostics.Runtime.ClrType? right) -> bool
static Microsoft.Diagnostics.Runtime.ClrType.operator ==(Microsoft.Diagnostics.Runtime.ClrType? left, Microsoft.Diagnostics.Runtime.ClrType? right) -> bool
static Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress.implicit operator Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress(ulong value) -> Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress
static Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress.implicit operator ulong(Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress cda) -> ulong
static Microsoft.Diagnostics.Runtime.DataTarget.AttachToProcess(int processId, bool suspend) -> Microsoft.Diagnostics.Runtime.DataTarget!
static Microsoft.Diagnostics.Runtime.DataTarget.CreateFromDbgEng(System.IntPtr pDebugClient) -> Microsoft.Diagnostics.Runtime.DataTarget!
static Microsoft.Diagnostics.Runtime.DataTarget.CreateSnapshotAndAttach(int processId) -> Microsoft.Diagnostics.Runtime.DataTarget!
static Microsoft.Diagnostics.Runtime.DataTarget.LoadDump(string! displayName, System.IO.Stream! stream, Microsoft.Diagnostics.Runtime.CacheOptions? cacheOptions = null, bool leaveOpen = false) -> Microsoft.Diagnostics.Runtime.DataTarget!
static Microsoft.Diagnostics.Runtime.DataTarget.LoadDump(string! filePath, Microsoft.Diagnostics.Runtime.CacheOptions? cacheOptions = null) -> Microsoft.Diagnostics.Runtime.DataTarget!
static Microsoft.Diagnostics.Runtime.DataTarget.PlatformFunctions.get -> Microsoft.Diagnostics.Runtime.PlatformFunctions!
static Microsoft.Diagnostics.Runtime.IAddressableTypedEntityExtensions.GetFieldFrom(this Microsoft.Diagnostics.Runtime.IAddressableTypedEntity! entity, string! fieldName) -> Microsoft.Diagnostics.Runtime.IAddressableTypedEntity!
static Microsoft.Diagnostics.Runtime.Implementation.ClrmdType.FixGenerics(string? name) -> string?
static Microsoft.Diagnostics.Runtime.M128A.operator !=(Microsoft.Diagnostics.Runtime.M128A left, Microsoft.Diagnostics.Runtime.M128A right) -> bool
static Microsoft.Diagnostics.Runtime.M128A.operator ==(Microsoft.Diagnostics.Runtime.M128A left, Microsoft.Diagnostics.Runtime.M128A right) -> bool
static Microsoft.Diagnostics.Runtime.MemoryRange.CreateFromLength(ulong start, ulong length) -> Microsoft.Diagnostics.Runtime.MemoryRange
static Microsoft.Diagnostics.Runtime.PdbInfo.operator !=(Microsoft.Diagnostics.Runtime.PdbInfo? left, Microsoft.Diagnostics.Runtime.PdbInfo? right) -> bool
static Microsoft.Diagnostics.Runtime.PdbInfo.operator ==(Microsoft.Diagnostics.Runtime.PdbInfo? left, Microsoft.Diagnostics.Runtime.PdbInfo? right) -> bool
static Microsoft.Diagnostics.Runtime.Utilities.COMHelper.QueryInterface(System.IntPtr pUnk, in System.Guid riid, out System.IntPtr result) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
static Microsoft.Diagnostics.Runtime.Utilities.COMHelper.Release(System.IntPtr pUnk) -> int
static Microsoft.Diagnostics.Runtime.Utilities.HResult.implicit operator Microsoft.Diagnostics.Runtime.Utilities.HResult(int hr) -> Microsoft.Diagnostics.Runtime.Utilities.HResult
static Microsoft.Diagnostics.Runtime.Utilities.HResult.implicit operator bool(Microsoft.Diagnostics.Runtime.Utilities.HResult hr) -> bool
static Microsoft.Diagnostics.Runtime.Utilities.HResult.implicit operator int(Microsoft.Diagnostics.Runtime.Utilities.HResult hr) -> int
static Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.MaxChildrenCount.get -> int
static Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.MaxChildrenCount.set -> void
static Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.MaxNameLength.get -> int
static Microsoft.Diagnostics.Runtime.Utilities.ResourceEntry.MaxNameLength.set -> void
static Microsoft.Diagnostics.Runtime.VersionInfo.operator !=(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.VersionInfo.operator <(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.VersionInfo.operator <=(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.VersionInfo.operator ==(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.VersionInfo.operator >(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.VersionInfo.operator >=(Microsoft.Diagnostics.Runtime.VersionInfo left, Microsoft.Diagnostics.Runtime.VersionInfo right) -> bool
static Microsoft.Diagnostics.Runtime.X86Context.Size.get -> int
static readonly Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport.IID_IMetaDataImport -> System.Guid
static readonly Microsoft.Diagnostics.Runtime.Utilities.COMHelper.IUnknownGuid -> System.Guid
virtual Microsoft.Diagnostics.Runtime.ClrField.IsObjectReference.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrField.IsPrimitive.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrField.IsValueType.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrInstanceField.GetAddress(ulong objRef) -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrMethod.IsClassConstructor.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrMethod.IsConstructor.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrModule.MetadataImport.get -> Microsoft.Diagnostics.Runtime.DacInterface.MetadataImport?
virtual Microsoft.Diagnostics.Runtime.ClrSegment.End.get -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrSegment.GetGeneration(ulong obj) -> int
virtual Microsoft.Diagnostics.Runtime.ClrSegment.Length.get -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrSegment.Start.get -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrType.AssemblyLoadContextAddress.get -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrType.AssemblyLoadContextHandle.get -> ulong
virtual Microsoft.Diagnostics.Runtime.ClrType.ContainsPointers.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.EnumerateGenericParameters() -> System.Collections.Generic.IEnumerable<Microsoft.Diagnostics.Runtime.ClrGenericParameter>!
virtual Microsoft.Diagnostics.Runtime.ClrType.IsCollectible.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsException.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsFree.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsObjectReference.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsPointer.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsPrimitive.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsString.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.IsValueType.get -> bool
virtual Microsoft.Diagnostics.Runtime.ClrType.LoaderAllocatorHandle.get -> ulong
virtual Microsoft.Diagnostics.Runtime.CustomDataTarget.Dispose(bool disposing) -> void
virtual Microsoft.Diagnostics.Runtime.ObjectSet.Add(ulong obj) -> bool
virtual Microsoft.Diagnostics.Runtime.ObjectSet.Clear() -> void
virtual Microsoft.Diagnostics.Runtime.ObjectSet.Contains(ulong obj) -> bool
virtual Microsoft.Diagnostics.Runtime.ObjectSet.Remove(ulong obj) -> bool
virtual Microsoft.Diagnostics.Runtime.PlatformFunctions.IsEqualFileVersion(string! file, Microsoft.Diagnostics.Runtime.VersionInfo version) -> bool
virtual Microsoft.Diagnostics.Runtime.SyncBlock.HoldingThreadAddress.get -> ulong
virtual Microsoft.Diagnostics.Runtime.SyncBlock.IsComCallWrapper.get -> bool
virtual Microsoft.Diagnostics.Runtime.SyncBlock.IsComClassFactory.get -> bool
virtual Microsoft.Diagnostics.Runtime.SyncBlock.IsMonitorHeld.get -> bool
virtual Microsoft.Diagnostics.Runtime.SyncBlock.IsRuntimeCallWrapper.get -> bool
virtual Microsoft.Diagnostics.Runtime.SyncBlock.RecursionCount.get -> int
virtual Microsoft.Diagnostics.Runtime.SyncBlock.WaitingThreadCount.get -> int
virtual Microsoft.Diagnostics.Runtime.Utilities.CallableCOMWrapper.Dispose(bool disposing) -> void
Microsoft.Diagnostics.Runtime.ClrArray.ClrArray() -> void
Microsoft.Diagnostics.Runtime.ClrGenericParameter.ClrGenericParameter() -> void
Microsoft.Diagnostics.Runtime.ClrObject.ClrObject() -> void
Microsoft.Diagnostics.Runtime.ClrReference.ClrReference() -> void
Microsoft.Diagnostics.Runtime.ClrStackRoot.ClrStackRoot() -> void
Microsoft.Diagnostics.Runtime.ClrValueType.ClrValueType() -> void
Microsoft.Diagnostics.Runtime.ComInterfaceData.ComInterfaceData() -> void
Microsoft.Diagnostics.Runtime.DacInterface.ClrDataAddress.ClrDataAddress() -> void
Microsoft.Diagnostics.Runtime.GCDesc.GCDesc() -> void
Microsoft.Diagnostics.Runtime.GCRootPath.GCRootPath() -> void
Microsoft.Diagnostics.Runtime.HotColdRegions.HotColdRegions() -> void
Microsoft.Diagnostics.Runtime.Implementation.FinalizerQueueSegment.FinalizerQueueSegment() -> void
Microsoft.Diagnostics.Runtime.MemoryRange.MemoryRange() -> void
Microsoft.Diagnostics.Runtime.Utilities.HResult.HResult() -> void
Microsoft.Diagnostics.Runtime.Utilities.SigParser.SigParser() -> void
Microsoft.Diagnostics.Runtime.VectorRegisterArea.VectorRegisterArea() -> void
Microsoft.Diagnostics.Runtime.VersionInfo.VersionInfo() -> void
Microsoft.Diagnostics.Runtime.IFileLocator
Microsoft.Diagnostics.Runtime.IFileLocator.FindPEImage(string! fileName, int buildTimeStamp, int imageSize, bool checkProperties) -> string?
Microsoft.Diagnostics.Runtime.CustomDataTarget.FileLocator.get -> Microsoft.Diagnostics.Runtime.IFileLocator?
Microsoft.Diagnostics.Runtime.CustomDataTarget.FileLocator.set -> void
Microsoft.Diagnostics.Runtime.DataTarget.FileLocator.get -> Microsoft.Diagnostics.Runtime.IFileLocator?
Microsoft.Diagnostics.Runtime.DataTarget.FileLocator.set -> void
Microsoft.Diagnostics.Runtime.IFileLocator.FindElfImage(string! fileName, Microsoft.Diagnostics.Runtime.SymbolProperties archivedUnder, System.Collections.Immutable.ImmutableArray<byte> buildId, bool checkProperties) -> string?
Microsoft.Diagnostics.Runtime.IFileLocator.FindMachOImage(string! fileName, Microsoft.Diagnostics.Runtime.SymbolProperties archivedUnder, System.Collections.Immutable.ImmutableArray<byte> uuid, bool checkProperties) -> string?
Microsoft.Diagnostics.Runtime.IFileLocator.FindPEImage(string! fileName, Microsoft.Diagnostics.Runtime.SymbolProperties archivedUnder, System.Collections.Immutable.ImmutableArray<byte> buildIdOrUUID, System.Runtime.InteropServices.OSPlatform originalPlatform, bool checkProperties) -> string?
Microsoft.Diagnostics.Runtime.SymbolProperties
Microsoft.Diagnostics.Runtime.SymbolProperties.Coreclr = 1 -> Microsoft.Diagnostics.Runtime.SymbolProperties
Microsoft.Diagnostics.Runtime.SymbolProperties.Self = 0 -> Microsoft.Diagnostics.Runtime.SymbolProperties
